IncludeClass(BaseGrid);

VOID SetupsGrid::SetupsGrid()				
{
	TableName = ~YearbookDefs~;
	DocumentQuery = ~Select * from <TableName> Order By YearbookID~;
	Title = TR(ExportToYearbook,YearbookDefs);
	WindowWidth = 90;
}

VOID	SetupsGrid::DefineMessages()
{
	BaseGrid::DefineMessages();	
	LoadTranslationFile( ExportToYearbook,ExportToYearbook,ExportToYearbook );
	Title = TR(ExportToYearbook,YearbookDefs);
}

STR SetupsGrid::GetKey( &Item )		{ return ~YearbookID = '<$con.Item[YearbookID]>'~; }	// PRIMARY KEY FOR THE TABLE

NUMERIC SetupsGrid::ChangeRecordAudits( &Changed )	// CALLED BEFORE ADDING OR CHANGING A RECORD
{
	if ( IsNULL(~<$Con.Changed[YearbookID]>~) )
		{ return Warning( TR(ExportToYearbook,AuditFailedBlank,TR(ExportToYearbook,Definition) ) ); }

	return TRUE;
}

NUMERIC SetupsGrid::DeleteRelatedRecords( &connection,&Item )
{ 
	CleanMapCmd = ~Delete from YBSIFieldMap Where YearbookID= '<$con.Item[YearbookID]>'~;
	CleanFieldsCmd = ~Delete from YearbookFields Where YearbookID= '<$con.Item[YearbookID]>'~;

	if ( !connection( CMD,~<CleanMapCmd>~ ) )
	{
		connection( GetErrorDescription,theErr );
		Log( Session, ~Database update failed: <Cmd>  <theErr>~ );
		Warning( TR( Standard, UnabletoUpdate) );
	}

	if ( !connection( CMD,~<CleanFieldsCmd>~ ) )
	{
		connection( GetErrorDescription,theErr );
		Log( Session, ~Database update failed: <Cmd>  <theErr>~ );
		Warning( TR( Standard, UnabletoUpdate) );
	}

	return TRUE;
}


NUMERIC Init()		
{
	if ( !Defined( Grid ) )
	{
		Class( SetupsGrid,Extends,BaseGrid );
		SetupsGrid( New,Grid );
		Grid.DefineWindow();
		Grid.Init();
		return Global( Grid );
	}
	
	return Grid.BringToFront();
}