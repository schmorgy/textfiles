// used for scanning dialogs
// to display Metric vs. English units
// all values are stored and applied as inches
//
InchesPerCm = 1 / 2.54;
InchesPerMm = 1 / 25.4;

CmPerInch = 2.54;
MmPerInch = 25.4;

CmPerMm = 0.10;
MmPerCm = 10.;

STR GetPreferredUnits()
{

	if ( GenCon( PreviewOptions,GetFrom,PreviewOptions,~[GENCONS]~ ) )
	{
		PreviewOptions( GetValue,PreferredUnits,CurrentUnits);
	}

	return <CurrentUnits>;

}

NUMERIC CentimetersToInches( value )
{
	valueInInches = <value> * <InchesPerCm>;

	return <valueInInches>;
}

NUMERIC MillimetersToInches( value )
{
	valueInInches = <value> * <InchesPerMm>;

	return <valueInInches>;
}

NUMERIC InchesToInches( value )
{
	return <value>;
}

NUMERIC InchesToCentimeters( value )
{
	valueInCm = <value> * <CmPerInch>;

	return <valueInCm>;
}

NUMERIC InchesToMillimeters( value )
{
	valueInMm = <value> * <MmPerInch>;

	return <valueInMm>;
}

STR InchesAbbrev()
{
	return ~in~;
}

STR CentimetersAbbrev()
{
	return ~cm~;
}

STR MillimetersAbbrev()
{
	return ~mm~;
}

NUMERIC LinesToInches( value )
{
	return LinesToMillimeters( <value> ) * <InchesPerMM>;
}

NUMERIC LinesToMillimeters( value )
{
	Mag = ~<$Con.DlgData[Format]>~;

	Index = MagNames( IndexOf,~<Mag>~ );
 	RealMag = CalculateMagnification( FALSE );

	PixelSize = 0.012;

	valueInMMs = ( <value> * <PixelSize> ) / <RealMag>;

	return <valueInMMs>;
}

NUMERIC LinesToCentimeters( value )
{
	return LinesToMillimeters( <value> ) * <CmPerMm>;
}

NUMERIC InchesToLines( value )
{
	mms = <value> * <MMPerInch>;
	return MillimetersToLines( <mms> );

}

NUMERIC CentimetersToLines( value )
{
	mms = <value> * <MmPerCm>;
	return MillimetersToLines( <mms> );
}

NUMERIC MillimetersToLines( value )
{
	Mag = ~<$Con.DlgData[Format]>~;

	Index = MagNames( IndexOf,~<Mag>~ );
 	RealMag = CalculateMagnification( FALSE );

	PixelSize = 0.012;

	valueInLines = ( <value> * <RealMag> ) / <PixelSize> ;
	return <valueInLines>;

}
