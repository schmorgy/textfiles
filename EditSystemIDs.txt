Include: ~Classes\BaseGrid~;

VOID IDsGrid::IDsGrid()					// CONSTRUCTOR
{
	TableName = ~IDs~;
	DocumentQuery = ~Select * from <TableName> Order By Name~;
	Title = ~System IDs~;
	WindowWidth = WindowHeight = 30;
	HelpFile = ~AdminHelpFile~;
	HelpPage = ~SystemIDs.htm~;
}

STR IDsGrid::GetKey( &Item )			{ return ~Name = '<$con.Item[Name]>'~; }  // PRIMARY KEY FOR THE TABLE

VOID IDsGrid::OnAddRecord( &NewRow )	{ NewRow( SetValues,ID,0,MaxValue,999999999,Digits,9 ); }

NUMERIC IDsGrid::ChangeRecordAudits( &Changed )		// CALLED BEFORE ADDING OR CHANGING A RECORD
{
	if ( IsNULL(~<$Con.Changed[Name]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  Name cannot be blank.~ ) ); }

	if ( IsNULL(~<$Con.Changed[ID]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  ID cannot be blank.~ ) ); }

	if ( IsNULL(~<$Con.Changed[MaxValue]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  MaxValue cannot be blank.~ ) ); }

	if ( IsNULL(~<$Con.Changed[Format]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  Digits cannot be blank.~ ) ); }

	return TRUE;
}

NUMERIC Init()
{
	Class( IDsGrid,Extends,BaseGrid );

	IDsGrid( New,Grid );

	Grid.DefineWindow();
	Grid.Init();

	return Global( Grid );
}

Init();