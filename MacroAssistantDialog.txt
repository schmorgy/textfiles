DialogWidth = 400;
DialogHeight = 300;
TabWidth = <DialogWidth> - 20;
TabHeight = <DialogHeight> - 50;
LeftMargin = 20;
StaticTextWidth = 80;
StaticTextHeight = 20;
CheckBoxWidth = 150;
CheckBoxHeight = 20;
Gap = 20;

// use MediumEditTextWidth when after a static text on a line
MediumEditTextWidth = <TabWidth> - <StaticTextWidth> - <Gap> - <LeftMargin>;

// use LargeEditTextWidth when the only control on a line
SmallEditTextWidth = <TabWidth> - 30;
LargeEditTextWidth = <TabWidth> - <LeftMargin>;
EditTextWidth = 80;
EditTextHeight = 20;
SliderWidth = 170;
ButtonWidth = 150;
SmallButtonWidth = 80;
LargeButtonWidth = 100;
ButtonHeight = 20;
VerticalSeparation = 30;
InitialVerticalPosition = 50;

Define: MacroFileTranslationTable Using DDListBoxItemTranslations
	Fields: FieldName				~Macros:~
	Fields: ListBoxItemText			~None~
	Fields: FieldValue				~~
Hang: MacroFileTranslationTable  ~[UI TranslationTables]~


StringList: Name ~MacroFiles~
//	Fields:	String	~None~
	Fields:	String	~Macros.txt~
Hang:	MacroFiles	~[STRINGS]~ ;

StringList: Name Categories
Hang:	Categories	~[STRINGS]~ ;

StringList: Name MacroChoices
	Fields:	String	~Default~
Hang:	MacroChoices	~[STRINGS]~ ;

StringList: Name NodeNames
	Fields:	String	~Default~
Hang:	NodeNames	~[STRINGS]~ ;


Define: MacroAssistantDialog Using DDWinDef // if the name is ever changed, you must also change UGenDlgBar::GetWindowPosition
fields: Position 400 70 <DialogWidth> <DialogHeight>
		Title ~Macro Assistant~
		AutoPosition 1
		TypeName ~DialogBar~
		Purpose ~MacroAssistant~
		OActionsText ~[PerformOActions]~
		HActionsText ACTION SHOWHELPPAGE ( KPISHelpFile "MacroAssist.htm" ) ;

Contains: InListOrder
{
	Define: CloseButton Using DDWinCtrlDef
	fields:	TypeName Button
			Text ~Close~
			Position <DialogWidth> - 120 , <DialogHeight> - 30,  <SmallButtonWidth> , <ButtonHeight>
			Tooltip ~Close the dialog~;

			ypos = 30;
	Define: NodeNameStaticText Using DDWinCtrlDef
			fields:	TypeName StaticText
			Text ~Node Name:~
			Position <LeftMargin>, <ypos>,  <StaticTextWidth> ,  <StaticTextHeight>

	Define: NodeName2StaticText Using DDWinCtrlDef
	fields:	TypeName StaticText
			GenConField ~NodeName:~
			Position <LeftMargin>  + <StaticTextWidth> + <Gap>, <ypos>,  <MediumEditTextWidth>, <EditTextHeight>
			Tooltip ~Select a Node name~;
			ypos = <ypos> + 30;

	Define: NodeNumberStaticText Using DDWinCtrlDef
	fields:	TypeName StaticText
			Text ~Number:~
			Position <LeftMargin>, <ypos>,  <StaticTextWidth> ,  <StaticTextHeight> ;

	Define: NodeNumber2StaticText Using DDWinCtrlDef AsSymbol NodeNumber2StaticText
	fields:	TypeName MaskedEditText
			GenConField ~LateResolveNodeNumber~
			Position <LeftMargin> +  <StaticTextWidth> + <Gap> , <ypos>,  <StaticTextWidth>*1.5 ,  <StaticTextHeight> 
			Mask		 ~%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%~
			AllowedChars ~-~
			Tooltip ~Click on the node to refer to, or enter a number to be used as a parameter in the macro, or click on 'Use Current Node Macro'.~ LOOKUPSOFF
			PromptChar	 ~ ~;
		

	Define: CurrentNodeButton Using DDWinCtrlDef
	fields:	TypeName Button
			Text ~Use Current Node Macro~
			Position NodeNumber2StaticText(GetRight,Position)+5, <ypos>,  130 ,  <StaticTextHeight> 
			Tooltip ~Used for looking up a keyword in the current node~;
	
			ypos = <ypos> + 30;
	Define: CategoryStaticText Using DDWinCtrlDef
	fields:	TypeName StaticText
			Text ~Category:~
			Position <LeftMargin>, <ypos>,  <StaticTextWidth> ,  <StaticTextHeight> ;


	Define: MacroCategoryComboBox Using DDWinCtrlDef
	fields:	TypeName SComboBox
			GenConName MacroParameters
			GenConField ~LateResolveMacroCategory~
			Position <LeftMargin>  + <StaticTextWidth> + <Gap>, <ypos>,  <MediumEditTextWidth>, 150
			Tooltip ~Select a category of macros~;

			ypos = <ypos> + 30;
	Define: MacroNameStaticText Using DDWinCtrlDef
	fields:	TypeName StaticText
			Text ~Macro Name:~
			Position <LeftMargin>, <ypos>,  <StaticTextWidth> ,  <StaticTextHeight> ;


	Define: MacroNameComboBox Using DDWinCtrlDef
	fields:	TypeName SComboBox
			GenConName MacroParameters
			GenConField ~LateResolveMacroName~
			Position <LeftMargin>  + 60  + <Gap>, <ypos>,  <MediumEditTextWidth> + 20, 150
			Tooltip ~Select the name of the macro from the current category~;


			ypos = <ypos> + 30;
	Define: MacroTextEditTextBox Using DDWinCtrlDef
	fields:	TypeName MaskedEditText
			Position <LeftMargin> , <ypos>, <LargeEditTextWidth>,<EditTextHeight>
			GenConField ~LateResolveMacroText~
			GenConName MacroParameters
			Mask RepeatStr(1023,~%~)	
			AllowedChars ~<$[Symbols].AllowableSpecialCharacters[Value]>~
			PromptChar	 ~ ~		
			Tooltip ~This is the string that you will Copy and then Paste into an Image or Text Node~;
			ypos = <ypos> + 30;

	Define: MacroDescriptionEditTextBox Using DDWinCtrlDef AsSymbol MacroDescriptionEditTextBox
	fields:	TypeName StaticText
			Position <LeftMargin> , <ypos>, <SmallEditTextWidth>,60
			GenConField ~LateResolveMacroDescription~
			GenConName MacroParameters
			Tooltip ~Description of the macro~;
			
	yPos = MacroDescriptionEditTextBox(GetBottom,Position);

		
	ypos = <ypos> + 30;
	
	Define: CopyButton Using DDWinCtrlDef AsSymbol CopyButton
	fields:	TypeName Button
			Text ~Copy to Clipboard~
			Position <LeftMargin> , <ypos>, <LargeButtonWidth>,<ButtonHeight>
			Tooltip ~Copy the macro text to the clipboard so that you may paste it into a layout~;

if ( 0)
{			
	Define: CopyToTextButton Using DDWinCtrlDef AsSymbol CopyToTextButton
	fields:	TypeName Button
			Text ~Copy to Text~
			Position <LeftMargin> , <ypos>, <LargeButtonWidth>,<ButtonHeight>
			Tooltip ~Copy the macro text to the selected node's text field.~;

	Define: CopyToImageButton Using DDWinCtrlDef AsSymbol CopyToImageButton
	fields:	TypeName Button
			Text ~Copy to Image~
			Position <LeftMargin> + <LargeButtonWidth> + 30 , <ypos>, <LargeButtonWidth>,<ButtonHeight>
			Tooltip ~Copy the macro text to the selected node's image file field~;



			ypos = <ypos> + 30;
	Define: MacroFileNameStaticText Using DDWinCtrlDef
	fields:	TypeName StaticText
			Text ~Macro File:~
			Position <LeftMargin>, <ypos>,  <StaticTextWidth> ,  <StaticTextHeight> ;


	Define: UseMacrosComboBox Using DDWinCtrlDef
	fields:	TypeName SComboBox
			Position <LeftMargin>  + <StaticTextWidth> + <Gap> , <ypos>, 200, 60
			GenConField ~Macros:~
			GenConName ~Macros:~
			Tooltip ~Enables macros that are contained in the referenced file.  Don't change this unless you have created your own macros file.~;
}
Hang:	MacroAssistantDialog ~[UI Dialogs]~ ;
