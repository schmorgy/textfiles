
//	THIS FILE WILL HANDLE THE CGETJOBQUEUES COMMAND
//
//	IT GETS THE LIST OF JOB QUEUES.

char	*NULL ;
int		 FALSE = 0;
int		 TRUE  = 1;


main()
{
	char*	theJobQueueWnd;
	char*	theNewJobQueueWnd;
	char*	theJobQueueViewList;
	char*	theNewJobQueueView;
	char*	PGCList;
	TCHAR	theQuery[1000];
	int		result;
	TCHAR	value[256];

	//Debug(TRUE);	//	INVOKE THE DEBUGGER !

	//  Get the order window gen con from the tree.  We will use this
	//  as the baseline for the window gen con that will be created.
	theJobQueueWnd = GetTreeObject("JobQueueWindow", "[UI Windows]");

	// Make a copy of the window definition.
	theNewJobQueueWnd = CopyGenCon(theJobQueueWnd);

	//  Set the name of the copied window gen con.
	SetName(theNewJobQueueWnd, "JobQueues");

	//  Get the JobQueue view list.
	theJobQueueViewList = GetChildren(theNewJobQueueWnd);

	// Get the JobQueue list view.
	theNewJobQueueView = GetItemByName(theJobQueueViewList, "QueueListView");

	// Create a new UPGENCONLIST.
	PGCList = NewPGenConList(GetKPISConnection());

	// Get the job queues from the database.
	strcpy(theQuery, "Select Distinct Queue From Printers Order By Queue");
	result = Query(PGCList, theQuery, "Optmistic", "Dynamic");
	if (result == 1)
	{
		// Set the view data attribute in the view to the new view data object.
		SetLongValue(theNewJobQueueView, "ViewData", PGCList);
	}
		
	// Hang the copied window definition on the tree.
	HangTreeObject(theNewJobQueueWnd, "[GenCons]");

	//  Set up the action to open the window and call the function
	//  that will cause the window to be opened.
	strcpy(value, "[Window(");
	strcat(value, GetName(theNewJobQueueWnd));
	strcat(value, " [GENCONS])]");
	HandleActions(value);
}