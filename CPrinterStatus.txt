//	THIS FILE CONTAINS ROUTINES TO HANDLE CHANGES IN PRINTER STATUS

// CPrinterStatus.txt

ExecC() ;

int		 FALSE = 0 ;
int		 TRUE  = ! FALSE ;
char	*NULL ;



main()
{
}



StatusChanged(TCHAR	*NewStatus)
{
	Debug(0) ;
	TCHAR	result[4] ;

	strcpy( result, "F" ) ;

	if( stricmp( "Halt", NewStatus ) == 0 )
	{
		if( HandleHalt()) { strcpy( result, "T" ) ; }
	}

	if( stricmp( "Flush", NewStatus ) == 0 )
	{
		if( HandleFlush()) { strcpy( result, "T" ) ; }
	}

	if( stricmp( "Run", NewStatus ) == 0 )
	{
		if( HandleRun()) { strcpy( result, "T" ) ; }
	}

	if( stricmp( "Shutdown", NewStatus ) == 0 )
	{
		if( HandleShutdown()) { strcpy( result, "T" ) ; }
	}

	if( stricmp( "Suspend", NewStatus ) == 0 )
	{
		if( HandleSuspend()) { strcpy( result, "T" ) ; }
	}

	return( result ) ;
}

//	THIS ROUTINE WILL PREVENT JOBS FROM PROGRESSING
//	THROUGH THE QUEUES.
HandleHalt()
{
}


//	THIS ROUTINE WILL FLUSH ALL JOBS IN THE MEMORY QUEUES
//	AND RESET THEIR DATA BASE ENTRIES ENTRIES TO STOPPED???
HandleFlush()
{
}


//	THIS ROUTINE WILL VERIFY THAT WE ARE CURRENTLY NOT
//	RUNNING AND IF NOT THEN START UP THE RENDERING ENINGE(S)
HandleRun()
{
}


//	THIS ROUTINE WILL VERIFY THAT THE RENDER ENGINE IS RUNNING
//	AND WILL CAUSE THE RENDER ENGINE TO SHUTDOWN IN A CONTROLLED
//	MANNER.
HandleShutdown()
{
}


//	THIS ROUTINE WILL VERIFY THAT THE RENDER ENGINE IS RUNNING
//	AND THEN HAVE IT NOT GET NEW JOBS FROM THE JOB QUEUE.  BUT
//	IT WILL CONTINUE TO RENDER AND PRINT THE JOBS IT ALREADY
//	HAS IN ITS MEMORY QUEUES.
HandleSuspend()
{
}