IncludeClass( BaseGrid );

VOID	MacroCategories::MacroCategories()						// CONSTRUCTOR
{
	TableName = ~MacroCategories~;							// Replace with the desired table name

	Title = ~Macro Categories~;					// Replace with the desired window title
	WindowTop = 25;
	WindowWidth = 100;
	WindowHeight = 25;
	SplitterRows = ~2 7 93~;
}

STR		MacroCategories::GetKey( &Item )			// PRIMARY KEY FOR THE TABLE
{
	return ~Category = '<$con.Item[Category]>'~;			// Replace with the correct table key
}

NUMERIC MacroCategories::ChangeRecordAudits( &Changed )		// CALLED BEFORE ADDING OR CHANGING A RECORD
{
	if ( IsNULL(~<$Con.Changed[Category]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  Category cannot be blank.~ ) ); }

	return TRUE;
}


NUMERIC Init( Which,Query )
{
	if ( Defined( Grid ) )
	{
		Grid.ReOpen();
		return TRUE;
	}
	else
	{
		Class( MacroCategories,Extends,BaseGrid );

		MacroCategories( New,Grid );

		Grid.Set( DocumentQuery,~<Query>~ );
		Grid.DefineWindow();
		Grid.Init();
		return Global( Grid );
	}
}

// The following is a trigger to be used for testing
 Init( ~all~,~Select * from <TableName>~ );