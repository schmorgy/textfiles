
DialogWidth = 200;
DialogHeight = 260;
LeftMargin = 20;
StaticTextWidth = 110;
StaticTextHeight = 20;
CheckBoxWidth = 200;
CheckBoxHeight = 20;
ComboBoxWidth = 120;
ComboBoxHeight = 150;
hGap = vGap = 5;


EditTextWidth = 50;
EditTextHeight = 20;
SliderWidth = 170;
ButtonWidth = 150;
SmallButtonWidth = 50;
ButtonHeight = 20; 
VerticalSeparation = 30;
InitialVerticalPosition = 70;
GenCon(WhiteBalanceToolParameters,GetGenCon,WhiteBalanceToolParameters);

VOID CreateDialog()
{
	Define: WhiteBalanceToolSetupDialog Using DDWinDef
	fields: Position 100 100 <DialogWidth> <DialogHeight>
			Title ~Click Balance Tool Properties~
			TypeName ~Dialog~
			OActionsText ACTION EXEC ( CancelPressed() )
			HACTIONSTEXT	ACTION SHOWHELPPAGE ( KPISHelpFile "Tool properties.htm" )

	Contains: INLISTORDER
	{

		ypos = 10;

		Define: UseWhiteBalanceCheckBox Using DDWinCtrlDef AsSymbol UseWhiteBalanceCheckBox
		fields:	TypeName CheckBox
				Position $LeftMargin + 10, <ypos>,  <StaticTextWidth> , 20
				GenConName WhiteBalanceToolParameters
				GenConField ~WhiteBalanceOn~
				IActionsText ~[GET]~
				DActionsText ~[Save]~
				OActionsText ~[Save]~
				Text ~On~
				Tooltip ~Turn click balance on or off.~;

		Define: OKButton Using DDWinCtrlDef AsSymbol OKButton
		fields:	TypeName DefaultButton
				Text ~OK~
				Position <DialogWidth> - 80 , UseWhiteBalanceCheckBox(GetBottom,position) + $vGap,  <SmallButtonWidth> , <ButtonHeight>
				IActionsText ~[Get]~
				DActionsText ACTION EXEC ( Done() )
				OActionsText ~[NULL]~
				Tooltip ~Save values~;

	}

	ypos = OKButton(GetBottom,Position) + 50;

	if ( !Defined(dlg) )
	{
		WhiteBalanceToolSetupDialog(Set,Position,~350 50 <DialogWidth> <ypos> ~);
		// look up a GenCon called WhiteBalanceToolParameters and refer to it as WhiteBalanceToolParameters inside this script
		GenDlg( dlg,Definition,WhiteBalanceToolSetupDialog,Data,WhiteBalanceToolParameters,Document,$Doc.This,New,Temporary );
		Global( dlg );
	}

	else
	{
		dlg (SetFocus);
	}

}

VOID ReOpen()
{
	dlg( SetFocus );
}

Include: ~UpdateUserSettings~;

VOID Done()
{
	dlg( GetInput );
	
	UpdateUserSettings( WhiteBalanceToolParameters,WhiteBalanceToolParameters );

	dlg( End );
	Exit();
}

VOID CancelPressed()
{
	dlg( End );
	Exit();
}

CreateDialog();


