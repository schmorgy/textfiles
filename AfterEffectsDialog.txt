LeftMargin = 20;
StaticTextWidth = 70;
EditTextWidth = 70; 
MediumEditTextWidth = 120; 
SliderWidth = 170;
VerticalGap = 10;
hGap = 5;
HelpButtonXOffset = 15;	HelpButtonYOffset = 35;
HelpButtonWidth = 30;	HelpButtonLength = 20;
CropButtonWidth = 70;

// Note:  DActions fields in dialogs should be set up to save
// values each time the user moves a slider, edits a text field, etc.
// The reason is that UGenDlg is set up to copy data from its source GenCon
// to the control each time a view is activated.  If we activate a UGenDlg
// to move a slider, then click in the view, we copy the data from its GenCon
// to its control.  If we hadn't saved the new slider value as it changed, it
// can be wiped out.

Define: AfterEffectsDialog Using DDWinDef // If the name is changed, you also must update UGenDlgBar::GetWindowPosition
fields: Position 400 20 400 400
		Title ~Image After Effects~
		TypeName ~DialogBar~
		Purpose ~AfterEffects~
		AutoPosition  1
		IActionsText ~[NULL]~
		OActionsText ~[PerformOActions]~
		HACTIONSTEXT	ACTION SHOWHELPPAGE ( KPISHelpFile "AEEdit.htm" )

Contains: InListOrder
{
	Define: OKButton Using DDWinCtrlDef
	fields:	TypeName Button
			Text ~Close~
			Position 280  350 80  20
			Tooltip ~Close window~

	Define: PreviewButton Using DDWinCtrlDef
	fields:	TypeName Button
			Text ~Preview~
			Position 180  350 80  20
			Tooltip ~Preview Changes~

	Define: AfterEffectsOptions Using DDWinCtrlDef  AsSymbol AfterEffectsOptions
	fields:	Position 10 10 380 330
			TypeName TabCtrl
			Text ~TCS_HOTTRACK | TCS_MULTILINE | TCS_TOOLTIPS~

	Contains: InListOrder 
	{		

		Define: Tab3 Using DDWinCtrlDef
		fields: Text ~Sharpen~
				TypeName Tab
				Tooltip ~Change sharpness~

		Contains: InListOrder
		{

			ypos = 80;
			Define: SharpenRadioButtonFaster Using DDWinCtrlDef
			fields: TypeName RadioButton  
					Position $LeftMargin + 20 , <ypos> ,120 ,20 
					GenConField ~SharpenType~
					RadioTrueValue ~F~
 					IsTabStop 1
					Text ~Faster~
					Tooltip ~Use a fast, high quality sharpening algorithm~;

			Define: SharpenRadioButtonNormal Using DDWinCtrlDef AsSymbol SharpenRadioButtonNormal
			fields: TypeName RadioButton  
					Position $LeftMargin + 150 , <ypos> ,130 ,20 
					GenConField ~SharpenType~
					RadioTrueValue ~S~
 					Text ~Higher Quality~
					IsTabStop 1
					Tooltip ~Use a very high quality sharpening algorithm~;


			yBottompos =  SharpenRadioButtonNormal(GetBottom,Position) + 10;
			ypos =  SharpenRadioButtonNormal(GetTop,Position) - 15;
			Define: ZZSharpenGroupBox Using DDWinCtrlDef AsSymbol ZZSharpenGroupBox
			fields:	TypeName GroupBox
					Text ~Quality~
					Position $LeftMargin, <ypos>, 360, <yBottompos> - <ypos>;

			ypos =  ZZSharpenGroupBox(GetBottom,Position) + 15;
			Define: SharpenValueStaticText Using DDWinCtrlDef
			fields:	TypeName StaticText
					Text ~Amount:~
					Position $LeftMargin + 20 <ypos> 80  20

			Define: SharpenValueEditText Using DDWinCtrlDef
			fields:	TypeName MaskedEditText
					Position 120 <ypos>  $EditTextWidth  20
					GenConField ~SharpenValue~
					Mask		 ~####~
					AllowedChars ~~
					PromptChar	 ~ ~		
					Tooltip ~Sharpening amounts in DP2 produce approximately half as much sharpening as KPIS.  To get the same amount of sharpening as KPIS, double the amount used in KPIS.~

			Define: SharpenValueSlider Using DDWinCtrlDef
			fields:	TypeName Slider
					Position 200 <ypos> 170  20
					GenConField ~SharpenValue~
					Tooltip ~Sharpening amounts in DP2 produce approximately half as much sharpening as KPIS.  To get the same amount of sharpening as KPIS, double the amount used in KPIS.~;

			ypos = <ypos> + 30;
			Define: SharpenMethodCheckBox Using DDWinCtrlDef AsSymbol SharpenMethodCheckBox
			fields:	TypeName Checkbox
					Position $LeftMargin + 20 <ypos>  $MediumEditTextWidth  20
					GenConField ~AdaptiveSharpen:~
					Text ~Adaptive Sharpen~
					Tooltip ~Use adaptive sharpening~;

			ypos = <ypos> + 30;
			Define: LimitValueStaticText Using DDWinCtrlDef
			fields:	TypeName StaticText
					Text ~Limit:~
					Position $LeftMargin + 20 <ypos> 80  20

			Define: LimitValueEditText Using DDWinCtrlDef
			fields:	TypeName MaskedEditText
					Position 120 <ypos>  $EditTextWidth  20
					GenConField ~AdaptiveSharpenLimit:~
					Mask		 ~####~
					AllowedChars ~~
					PromptChar	 ~ ~		
					Tooltip ~Set adaptive sharpen limit.~

			Define: LimitValueSlider Using DDWinCtrlDef
			fields:	TypeName Slider
					Position 200 <ypos> 170  20
					GenConField ~AdaptiveSharpenLimit:~
					Tooltip ~Set adaptive sharpen limit.~;

			ypos = <ypos> + 30;
			Define: ThresholdStaticText Using DDWinCtrlDef
			fields:	TypeName StaticText
					Text ~Threshold:~
					Position $LeftMargin + 20 <ypos> 80  20

			Define: ThresholdEditText Using DDWinCtrlDef
			fields:	TypeName MaskedEditText
					Position 120 <ypos>  $EditTextWidth  20
					GenConField ~AdaptiveSharpenThreshold:~
					Mask		 ~####~
					AllowedChars ~~
					PromptChar	 ~ ~		
					Tooltip ~Set adaptive sharpen threshhold~

			Define: ThresholdSlider Using DDWinCtrlDef
			fields:	TypeName Slider
					Position 200 <ypos> 170  20
					GenConField ~AdaptiveSharpenThreshold:~
					Tooltip ~Set adaptive sharpen threshold~;

			ypos = <ypos> + 30;
			Define: AdaptiveSharpenBlurStaticText Using DDWinCtrlDef
			fields:	TypeName StaticText
					Text ~Blur:~
					Position $LeftMargin + 20 <ypos> 80  20

			Define: AdaptiveSharpenBlurEditText Using DDWinCtrlDef
			fields:	TypeName MaskedEditText
					Position 120 <ypos>  $EditTextWidth  20
					GenConField ~AdaptiveSharpenBlur:~
					Mask		 ~####~
					AllowedChars ~~
					PromptChar	 ~ ~		
					Tooltip ~Set adaptive sharpen blur~

			Define: AdaptiveSharpenBlurSlider Using DDWinCtrlDef AsSymbol AdaptiveSharpenBlurSlider
			fields:	TypeName Slider
					Position 200 <ypos> 170  20
					GenConField ~AdaptiveSharpenBlur:~
					Tooltip ~Set adaptive sharpen blur~;


			Define: SharpnessHelpButton Using DDWinCtrlDef
			fields:	TypeName		Button
					Text			~Help~
					DActionsText	ACTION SHOWHELPPAGE ( KPISHelpFile "AESharpness.htm" )
					Position		AfterEffectsOptions(GetLeft,Position) + $HelpButtonXOffset,
									AfterEffectsOptions(GetBottom,Position) - $HelpButtonYOffset,
									$HelpButtonWidth $HelpButtonLength;



		}

		Define: Tab4 Using DDWinCtrlDef
		fields: Text ~Adjustments~
				TypeName Tab
				Tooltip ~Change color or brightness~
		Contains: InListOrder
			{
			ypos = 70;
			Define: DensityStaticText Using DDWinCtrlDef
			fields:	TypeName StaticText
					Text ~Density:~
					Position $LeftMargin <ypos> 100  20
			Define: DensityEditText Using DDWinCtrlDef
			fields:	TypeName MaskedEditText
					Position 120 <ypos>  $EditTextWidth  20
					GenConField ~Density:~
					Mask		 ~####~
					AllowedChars ~-~
					PromptChar	 ~ ~		
					Tooltip ~Increase or decrease density~

			Define: DensitySlider Using DDWinCtrlDef
			fields:	TypeName Slider
					Position 200 <ypos> 170  20
					GenConField ~Density:~
					Tooltip ~Increase or decrease density~;

			ypos = <ypos> + 30;

			Define: RGBRedStaticText Using DDWinCtrlDef
			fields:	TypeName StaticText
					Text ~Red:~
					Position $LeftMargin <ypos> 100  20
			Define: RGBRedEditText Using DDWinCtrlDef
			fields:	TypeName MaskedEditText
					Position 120 <ypos>  $EditTextWidth  20
					GenConField ~RGBRed:~
					Tooltip ~Specify a color shift for red component~
					Mask		 ~####~
					AllowedChars ~-~
					PromptChar	 ~ ~;		
			Define: RGBRedSlider Using DDWinCtrlDef
			fields:	TypeName Slider
					Position 200 <ypos> 170  20
					Tooltip ~Increase or decrease red~
					GenConField ~RGBRed:~;
			ypos = <ypos> + 30;
			Define: RGBGreenStaticText Using DDWinCtrlDef
			fields:	TypeName StaticText
					Text ~Green:~
					Position $LeftMargin <ypos> 100  20
			Define: RGBGreenEditText Using DDWinCtrlDef
			fields:	TypeName MaskedEditText
					Position 120 <ypos>  $EditTextWidth  20
					GenConField ~RGBGreen:~
					Mask		 ~####~
					AllowedChars ~-~
					PromptChar	 ~ ~		
					Tooltip ~Specify a color shift for green component~

			Define: RGBGreenSlider Using DDWinCtrlDef
			fields:	TypeName Slider
					Position 200 <ypos> 170  20
					GenConField ~RGBGreen:~
					Tooltip ~Increase or decrease green~;

			ypos = <ypos> + 30;
			Define: RGBBlueStaticText Using DDWinCtrlDef
			fields:	TypeName StaticText
					Text ~Blue:~
					Position $LeftMargin <ypos> 100  20
			Define: RGBBlueEditText Using DDWinCtrlDef
			fields:	TypeName MaskedEditText
					Position 120 <ypos>  $EditTextWidth  20
					GenConField ~RGBBlue:~
					Mask		 ~####~
					AllowedChars ~-~
					PromptChar	 ~ ~		
					Tooltip ~Specify a color shift for blue component~
			Define: RGBBlueSlider Using DDWinCtrlDef
			fields:	TypeName Slider
					Position 200 <ypos> 170  20
					GenConField ~RGBBlue:~
					Tooltip ~Increase or decrease blue~;

			ypos = <ypos> + 30;
			Define: ContrastStaticText Using DDWinCtrlDef
			fields:	TypeName StaticText
					Text ~Contrast:~
					Position $LeftMargin <ypos> 100  20
			Define: ContrastEditText Using DDWinCtrlDef
			fields:	TypeName MaskedEditText
					Position 120 <ypos>  $EditTextWidth  20
					GenConField ~Contrast:~
					Mask		 ~####~
					AllowedChars ~-~
					PromptChar	 ~ ~		
					Tooltip ~Increase or decrease contrast~
			Define: ContrastSlider Using DDWinCtrlDef
			fields:	TypeName Slider
					Position 200 <ypos> 170  20
					GenConField ~Contrast:~
					Tooltip ~Increase or decrease contrast~;
			ypos = <ypos> + 30;
			Define: XGammaStaticText Using DDWinCtrlDef
			fields:	TypeName StaticText
					Text ~XGamma:~
					Position $LeftMargin <ypos> 100  20
			Define: XGammaEditText Using DDWinCtrlDef
			fields:	TypeName MaskedEditText
					Position 120 <ypos>  $EditTextWidth  20
					GenConField ~XGamma:~
					Mask		 ~############~
					AllowedChars ~.-~
					PromptChar	 ~ ~		
					Tooltip ~Change the gamma~
			Define: XGammaSlider Using DDWinCtrlDef
			fields:	TypeName Slider
					Position 200 <ypos> 170  20
					GenConField ~XGamma:~
					Units .1
					Tooltip ~Change the gamma~;
			ypos = <ypos> + 30;
			Define: SaturationStaticText Using DDWinCtrlDef
			fields:	TypeName StaticText
					Text ~Saturation:~
					Position $LeftMargin <ypos> 100  20
			Define: SaturationEditText Using DDWinCtrlDef
			fields:	TypeName MaskedEditText
					Position 120 <ypos>  $EditTextWidth  20
					GenConField ~Saturation:~
					Mask		 ~####~
					AllowedChars ~-~
					PromptChar	 ~ ~		
					Tooltip ~Increase or decrease saturation~
			Define: SaturationSlider Using DDWinCtrlDef
			fields:	TypeName Slider
					Position 200 <ypos> 170  20
					GenConField ~Saturation:~
					Tooltip ~Increase or decrease saturation~;

			ypos = <ypos> + 30;
			Define: Negative Using DDWinCtrlDef
			fields:	TypeName CheckBox
					GenConField ~Negative:~
					Text ~Negative~
					Position $LeftMargin <ypos> 120 15
					IsTabStop 1
					Tooltip ~Make a negative image~;

			Define: MakeGrayscale Using DDWinCtrlDef
			fields:	TypeName CheckBox
					GenConField ~MakeGrayscale:~
					Text ~Make Grayscale~
					Position $LeftMargin + 130 ,<ypos> 120 15
					IsTabStop 1
					Tooltip ~Convert the image to grayscale~;

			Define: ColorBrightHelpButton Using DDWinCtrlDef
			fields:	TypeName		Button
					Text			~Help~
					DActionsText	ACTION SHOWHELPPAGE ( KPISHelpFile "AEColorBright.htm" ) 
					Position		AfterEffectsOptions(GetLeft,Position) + $HelpButtonXOffset,
									AfterEffectsOptions(GetBottom,Position) - $HelpButtonYOffset,
									$HelpButtonWidth $HelpButtonLength

			}


		Define: Tab7 Using DDWinCtrlDef
		fields: Text ~Tables~
				TypeName Tab
				Tooltip ~Apply lookup table or matrix~
		Contains: InListOrder
		{
			ypos = 70;

			Define: LUTButton Using DDWinCtrlDef
			fields:	TypeName Button
					Text ~Lookup Table...~
					GenConField ~LUT:~
					Position $LeftMargin,  <ypos>,  150,  20
					Tooltip ~Select a lookup table file~
			Define: ClearLUTButton Using DDWinCtrlDef
					fields:	TypeName Button
					Text ~Remove LUT~
					Position $LeftMargin + 160, <ypos> , 150 , 20
					GenConField ~LUT:~
					Tooltip ~Remove the lookup table~;
			ypos = <ypos> + 30;
			Define: LUTEditText Using DDWinCtrlDef
			fields:	TypeName MaskedEditText
					GenConField ~LUT:~
					Position $LeftMargin, <ypos> , 350 , 20
					InsertOn	~T~	
					Mask			~<$[DATABASE FieldTypes].FilePath[Mask]>~
					PromptChar		~<$[DATABASE FieldTypes].FilePath[PromptChar]>~
					AllowedChars	~<$[DATABASE FieldTypes].FilePath[AllowedChars]>~
					DisallowedChars ~<$[DATABASE FieldTypes].FilePath[DisallowedChars]>~
					Tooltip ~Edit lookup table path~;
			ypos = <ypos> + 50;
			Define: ColorMatrixButton Using DDWinCtrlDef
			fields:	TypeName Button
					Text ~Color Matrix...~
					GenConField ~ColorMatrix:~
					Position $LeftMargin,  <ypos>,  150,  20
					Tooltip ~Select a color matrix file~

			Define: ClearColorMatrixButton Using DDWinCtrlDef
					fields:	TypeName Button
					Text ~Remove Color Matrix~
					Position $LeftMargin + 160, <ypos> , 150 , 20
					GenConField ~ColorMatrix:~
					Tooltip ~Remove the color matrix~;

			ypos = <ypos> + 30;
			Define: ColorMatrixEditText Using DDWinCtrlDef
			fields:	TypeName MaskedEditText
					GenConField ~ColorMatrix:~
					Position $LeftMargin, <ypos> , 350 , 20
					InsertOn	~T~	
					Mask			~<$[DATABASE FieldTypes].FilePath[Mask]>~
					PromptChar		~<$[DATABASE FieldTypes].FilePath[PromptChar]>~
					AllowedChars	~<$[DATABASE FieldTypes].FilePath[AllowedChars]>~
					DisallowedChars ~<$[DATABASE FieldTypes].FilePath[DisallowedChars]>~
					Tooltip ~Edit color matrix file path~;

			ypos = <ypos> + 50;
			Define: SepiaButton Using DDWinCtrlDef
			fields:	TypeName Button
					GenConField ~Sepia:~
					Text ~Sepia Lookup Table...~
					Position $LeftMargin,  <ypos>,  150,  20
					Tooltip ~Select a sepia lookup table file~

			Define: ClearSepiaButton Using DDWinCtrlDef
					fields:	TypeName Button
					Text ~Remove Sepia~
					Position $LeftMargin + 160, <ypos> , 150 , 20
					GenConField ~Sepia:~
					Tooltip ~Remove the sepia lookup table~;

			ypos = <ypos> + 30;
			Define: SepiaEditText Using DDWinCtrlDef
			fields:	TypeName MaskedEditText
					GenConField ~Sepia:~
					Position $LeftMargin, <ypos> , 350 , 20
					InsertOn	~T~	
					Mask			~<$[DATABASE FieldTypes].FilePath[Mask]>~
					PromptChar		~<$[DATABASE FieldTypes].FilePath[PromptChar]>~
					AllowedChars	~<$[DATABASE FieldTypes].FilePath[AllowedChars]>~
					DisallowedChars ~<$[DATABASE FieldTypes].FilePath[DisallowedChars]>~
					Tooltip ~Edit sepia lookup table path~

			Define: TablesHelpButton Using DDWinCtrlDef
			fields:	TypeName		Button
					Text			~Help~
					DActionsText	ACTION SHOWHELPPAGE ( KPISHelpFile "AEColorMgmt.htm" ) 
					Position		AfterEffectsOptions(GetLeft,Position) + $HelpButtonXOffset,
									AfterEffectsOptions(GetBottom,Position) - $HelpButtonYOffset,
									$HelpButtonWidth $HelpButtonLength

		} 					 			
	}
}

Hang: AfterEffectsDialog ~[UI Dialogs]~ ;
