

//	THIS PROGRAM WILL CREATE NUMBERED TEST IMAGES THAT WILL
//  BE USED TO GENERATE THUMBNAILS FOR KPIS


char*	NULL;
int		FALSE = 0;
int		TRUE = 1;


main()
{
	char	*theIma ;
	char	*IAndTNode ;
	TCHAR	 FileName[64] ;
	TCHAR	 FileNum[64] ;
	TCHAR	 ImageNum[64] ;
	double	 Width, Height ;
	double	 theRect[4] ;
	double	 cropRect[4] ;
	double	 dstRect[4] ;
	int		 X, Y ;
	long	 ImaSource ;
	long	 TextXform ;
	long	 Sink ;
	long	 loop ;

	Debug(TRUE);

	IAndTNode = CreateGenCon( GetDataDictionary("DDImageAndTextNode")) ;

	SetAttrValue( IAndTNode, "ILocation:", "195 360 0 0" ) ;
	SetAttrValue( IAndTNode, "TLocation:", "0 0 250 110" ) ;
	SetAttrValue( IAndTNode, "TFont:", "Courier New" ) ;
	SetAttrValue( IAndTNode, "TStyle:", "Bold" ) ;
	SetAttrValue( IAndTNode, "TSize:", "0" ) ;
	SetAttrValue( IAndTNode, "TColor:", "0 255 255 255" ) ;
	SetAttrValue( IAndTNode, "Justification:", "Center" ) ;
	SetAttrValue( IAndTNode, "TextAlignment:", "Center" ) ;

	Width  = 400.0 ;
	Height = 512.0 ;

	theIma = IMAInit() ;

	ImaSource = ImaNewImageSource( theIma, "ANY", "D:\\Images\\Shirley" ) ;
	GetMaxResolution( theIma, ImaSource, &X, &Y ) ;
	theRect[0] = 0.0 ;	theRect[1] = 0.0 ;
	theRect[2] = X ;	theRect[3] = Y ;

	dstRect[0] = 0.0 ;		dstRect[1] = 0.0 ;
	dstRect[2] = 400.0 ;	dstRect[3] = 512.0 ;

	ComputeAutoCrop( theIma, "50 50 50 50 100 100", 0.0, 0.0,
			theRect, cropRect, dstRect, 'C' ) ;

	ImaSource = ImaCrop( theIma, ImaSource, "PIXEL", cropRect ) ;

	ImaSource = ImaResample( theIma, ImaSource, Width, Height, "PIXEL",
								"BILINEAR", "SCALEXY" ) ;

	ImaSetCaching( theIma, ImaSource, TRUE ) ;

	for( loop = 1 ; loop <= 300 ; loop = loop + 2 )
	{
		sprintf( FileNum, "%03ld", loop ) ;
		strcpy( FileName, "D:\\Images\\Shirley" ) ;
		strcat( FileName, FileNum ) ;
		sprintf( ImageNum, "%ld", loop ) ;
		SetAttrValue( IAndTNode, "Text:", ImageNum ) ;

		TextXform = ImaText( theIma, ImaSource, IAndTNode, 1.0 ) ;
		
		Sink = ImaNewImageSink( theIma, TextXform, "JPEG", FileName ) ;

		ImaRender( theIma, Sink ) ;
	}

	ImaSource = ImaReorient( theIma, ImaSource, "RCW" ) ;

	ImaSetCaching( theIma, ImaSource, TRUE ) ;

	SetAttrValue( IAndTNode, "ILocation:", "-35 250 0 0" ) ;

	for( loop = 2 ; loop <= 300 ; loop = loop + 2 )
	{
		sprintf( FileNum, "%03ld", loop ) ;
		strcpy( FileName, "D:\\Images\\Shirley" ) ;
		strcat( FileName, FileNum ) ;
		sprintf( ImageNum, "%ld", loop ) ;
		SetAttrValue( IAndTNode, "Text:", ImageNum ) ;

		TextXform = ImaText( theIma, ImaSource, IAndTNode, 1.0 ) ;
		
		Sink = ImaNewImageSink( theIma, TextXform, "JPEG", FileName ) ;

		ImaRender( theIma, Sink ) ;
	}

	Delete( IAndTNode ) ;
	ImaDestruct(theIma) ;
	MessageBox( "Image Generated Successfully.", "MB_OK" ) ;
}