VOID DefineSQLTranslations()
{

	Define:	TableNames Using DDSymbol
		Fields:	Value	~These strings are SQL related strings for Tables Names used by the user interface.~
		Contains:
		{
			Define: Customers			using DDText	Fields: Text ~Customers~
			Define: Orders				using DDText	Fields: Text ~Orders~
			Define: OrderItems			using DDText	Fields: Text ~OrderItems~
			Define: OrderItemsToQueue	using DDText	Fields: Text ~OrderItemsToQueue~
			Define: OrdersToProof		using DDText	Fields: Text ~OrdersToProof~
			Define: Images				using DDText	Fields: Text ~Images~
			Define: Rolls				using DDText	Fields: Text ~Rolls~
			Define: SubjectInfo			using DDText	Fields: Text ~SubjectInfo~
			Define: Products			using DDText	Fields: Text ~Products~
			Define: Packages			using DDText	Fields: Text ~Packages~
			Define: FilmDrives			using DDText	Fields: Text ~FilmDrives~
			Define: JobQueue			using DDText	Fields: Text ~JobQueue~
			Define: Printers			using DDText	Fields: Text ~Printers~
			Define: PrinterModels		using DDText	Fields: Text ~PrinterModels~
			Define: RenderEngine		using DDText	Fields: Text ~RenderEngine~
			Define: QueueDefinition		using DDText	Fields: Text ~QueueDefinition~
			Define: RemoteJobDirs		using DDText	Fields: Text ~RemoteJobDirs~
			Define: Jobs				using DDText	Fields: Text ~Jobs~
			Define: SystemSettings		using DDText	Fields: Text ~SystemSettings~
			Define: Settings			using DDText	Fields: Text ~Settings~
			Define: Query				using DDText	Fields: Text ~Query~
			Define: Tasks				using DDText	Fields: Text ~Tasks~
			Define: Macros				using DDText	Fields: Text ~Macros~
			Define: FileLocation		using DDText	Fields: Text ~FileLocation~
			Define: Users				using DDText	Fields: Text ~Users~
			Define: UserTasks			using DDText	Fields: Text ~UserTasks~
			Define: Activity			using DDText	Fields: Text ~Activity~
			Define: DRGBRefs			using DDText	Fields: Text ~DRGBRefs~
			Define: ScanSetups			using DDText	Fields: Text ~ScanSetups~
			Define: FileFormats			using DDText	Fields: Text ~FileFormats~
			Define: Crops				using DDText	Fields: Text ~Crops~
			Define: Profiles			using DDText	Fields: Text ~Profiles~
			Define: BremsonFilmDrive	using DDText	Fields: Text ~BremsonFilmDrive~
			Define: BremsonScanList		using DDText	Fields: Text ~BremsonScanList~
			Define: Calibration			using DDText	Fields: Text ~Calibration~
			Define: ViewProfiles		using DDText	Fields: Text ~ViewProfiles~
			Define: UserPrefs			using DDText	Fields: Text ~UserPrefs~
			Define: Customers			using DDText	Fields: Text ~Customers~
			Define: ScanSetups			using DDText	Fields: Text ~ScanSetups~

			Define: BremsonCustomers	using DDText	Fields: Text ~BremsonCustomers~
		}

	Hang:	TableNames	~[STRINGS]~ ;


	Define:	SQLWords Using DDSymbol
		Fields:	Value	~These strings are SQL related strings used by the user interface.~
		Contains:
		{
			Define: BETWEEN		using DDText	Fields: Text ~Between~
			Define: LIKE		using DDText	Fields: Text ~Like~
			Define: NOTLIKE		using DDText	Fields: Text ~Not Like~
			Define: NULL		using DDText	Fields: Text ~Null~
			Define: NOTNULL		using DDText	Fields: Text ~Not Null~
			Define: IN			using DDText	Fields: Text ~In~
		}
	Hang:	SQLWords	~[STRINGS]~ ;

	StringList:	Name ~SQLOperatorsForLONG~
		Fields: String	~=~
		Fields: String	~<>~
		Fields: String	~<~
		Fields:	String	~<=~
		Fields:	String	~>~
		Fields:	String	~>=~
		Fields:	String	Translate(SQLWords,BETWEEN)
	if ( RunningVersion(2.2) )
	{
		Fields:	String	Translate(SQLWords,IN)
	}
		Fields:	String	Translate(SQLWords,NULL)
		Fields:	String	Translate(SQLWords,NotNULL)
	Hang:	SQLOperatorsForLONG	~[STRINGS]~

	StringList:	Name ~SQLOperatorsForDOUBLE~
		Fields: String	~=~
		Fields: String	~<>~
		Fields: String	~<~
		Fields:	String	~<=~
		Fields:	String	~>~
		Fields:	String	~>=~
		Fields:	String	Translate(SQLWords,BETWEEN)
	if ( RunningVersion(2.2) )
	{
		Fields:	String	Translate(SQLWords,IN)
	}
		Fields:	String	Translate(SQLWords,NULL)
		Fields:	String	Translate(SQLWords,NotNULL)
	Hang:	SQLOperatorsForDOUBLE	~[STRINGS]~

	StringList:	Name ~SQLOperatorsForCHAR~
		Fields: String	Translate(SQLWords,LIKE)
	if ( RunningVersion(2.2) )
	{
		Fields: String	~<>~
		Fields:	String	~=~
		Fields: String	~<~
		Fields:	String	~<=~
		Fields:	String	~>~
		Fields:	String	~>=~
		Fields:	String	Translate(SQLWords,BETWEEN)
		Fields:	String	Translate(SQLWords,IN)
	}
		Fields:	String	Translate(SQLWords,NULL)
		Fields:	String	Translate(SQLWords,NotNULL)
	Hang:	SQLOperatorsForCHAR	~[STRINGS]~

	StringList:	Name ~SQLOperatorsForSTRING~
		Fields: String	Translate(SQLWords,LIKE)
		Fields: String	Translate(SQLWords,NOTLIKE)
		Fields: String	~<>~
		Fields:	String	~=~

	if ( RunningVersion(2.2) )
	{
		Fields: String	~<~
		Fields:	String	~<=~
		Fields:	String	~>~
		Fields:	String	~>=~
		Fields:	String	Translate(SQLWords,BETWEEN)
		Fields:	String	Translate(SQLWords,IN)
	}

		Fields:	String	Translate(SQLWords,NULL)
		Fields:	String	Translate(SQLWords,NotNULL)
	Hang:	SQLOperatorsForSTRING	~[STRINGS]~

	StringList:	Name ~SQLOperatorsForTEXT~
		Fields: String	Translate(SQLWords,LIKE)
		Fields: String	~<>~
		Fields:	String	~=~

	if ( RunningVersion(2.2) )
	{
		Fields: String	~<~
		Fields:	String	~<=~
		Fields:	String	~>~
		Fields:	String	~>=~
		Fields:	String	Translate(SQLWords,BETWEEN)
		Fields:	String	Translate(SQLWords,IN)
	}

		Fields:	String	Translate(SQLWords,NULL)
		Fields:	String	Translate(SQLWords,NotNULL)
	Hang:	SQLOperatorsForTEXT	~[STRINGS]~

	StringList:	Name ~SQLOperatorsForDATE~
		Fields: String	~<>~
		Fields:	String	~=~


		Fields: String	~<~
		Fields:	String	~<=~
		Fields:	String	~>~
		Fields:	String	~>=~
		Fields:	String	Translate(SQLWords,BETWEEN)
	//	Fields:	String	Translate(SQLWords,IN)


		Fields:	String	Translate(SQLWords,NULL)
		Fields:	String	Translate(SQLWords,NotNULL)
	Hang:	SQLOperatorsForDATE	~[STRINGS]~
}


DefineSQLTranslations();