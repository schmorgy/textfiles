LeftMargin = 20;
StaticTextWidth = 70;
LargeStaticTextWidth = 220;
EditTextWidth = 270;
SliderWidth = 170;
VerticalGap = 10;
HelpButtonXOffset = 15;	HelpButtonYOffset = 35;
HelpButtonWidth = 30;	HelpButtonLength = 20;
DialogHeight = 380;

if ( !Tree( Name,BackgroundTypesList,Location,~[STRINGS]~,Exists ) )
{

	StringList: Name BackgroundTypesList
	Hang:	BackgroundTypesList	~[STRINGS]~ ;
}


Define: MajorKeywordsDialog Using DDWinDef // if the name is ever changed, you must also change UGenDlgBar::GetWindowPosition
fields: Position 500 70 420 <DialogHeight>
		Title ~Product Info~
		AutoPosition 1
		TypeName ~DialogBar~
		Purpose ~Major keywords~
		IActionsText ~[NULL]~
		OActionsText ~[PerformOActions]~

Contains:
{
	ypos = 20;
	Define: DataRecordsStaticText Using DDWinCtrlDef
	fields:	TypeName StaticText
			Position $LeftMargin <ypos>  $StaticTextWidth  20
			Text ~Product Type:~;

	Query = ~Select BackgroundType From BackgroundTypes Union Select '' From BackgroundTypes Order By BackgroundType~;
	Define: BackgroundTypeComboBox Using DDWinCtrlDef
	fields:	TypeName SComboBox
			GenConName THIS
			GenConField ~ProductType:~
			Position $LeftMargin + $StaticTextWidth + 20 <ypos>  $EditTextWidth  150
			IActionsText ~[UpdateList(BackgroundTypesList "<Query>" BackgroundType) GetList(BackgroundTypesList) Get]~
			DActionsText ~[Save]~
			OActionsText ~[Save]~ 
			Tooltip ~Select a product type~;

	ypos = <ypos> + 30;
		Define: ChromaKeyPortraitBGButton Using DDWinCtrlDef AsSymbol ChromaKeyPortraitBGButton
		fields:	TypeName Button
				Text ~Chroma Key Portrait Background...~
				Position $LeftMargin <ypos>  190  20
				GenConField ~ChromaKeyPortraitBGFile:~
				IActionsText ~[Get]~
				DActionsText ~[FileOpenBuildThumbnailRegister UpdateControl(ChromaKeyPortraitEditText)]~
				OActionsText ~[NULL]~
				Tooltip ~Select an chroma key portrait bg~;

		Define: ClearChromaKeyPGButton Using DDWinCtrlDef AsSymbol ClearChromaKeyPGButton
				fields:	TypeName Button
				Text ~Remove~
				Position ChromaKeyPortraitBGButton(GetRight,Position)+5, <ypos> , 162 , 20
				GenConField ~ChromaKeyPortraitBGFile:~
				IActionsText ~[Get]~
				DactionsText ACTIONS ( 
									ExecFile(ClearField.txt)
									Exec(ClearField(MajorKeywordsDialog,~CommonChromaKeyPortraitBGFile:~);)
									Update(ChromaKeyPortraitEditText)
									Update(ChromaKeyPortraitBGButton)
									)							
				OActionsText ~[NULL]~
				Tooltip ~Clear the Chroma key portrait bg~;

		ypos = <ypos> + 30;
		Define: ChromaKeyPortraitStaticText Using DDWinCtrlDef AsSymbol ChromaKeyPortraitStaticText
		fields:	TypeName StaticText
				Position $LeftMargin <ypos>  $StaticTextWidth+160  20
				Text ~Chroma Key Portrait Background:~;

		ypos = <ypos> + 30;
		Define: ChromaKeyPortraitEditText Using DDWinCtrlDef AsSymbol ChromaKeyPortraitEditText
		fields:	TypeName MaskedEditText
				Position ChromaKeyPortraitStaticText(GetLeft,Position),  <ypos> , 360 , 20
				GenConField ~CommonChromaKeyPortraitBGFile:~
				RightJustified 1
				Mask			~<$[DATABASE FieldTypes].FilePath[Mask]>~
				PromptChar		~<$[DATABASE FieldTypes].FilePath[PromptChar]>~
				AllowedChars	~<$[DATABASE FieldTypes].FilePath[AllowedChars]>~
				DisallowedChars ~<$[DATABASE FieldTypes].FilePath[DisallowedChars]>~
				Tooltip ~Edit background file path~
				PromptChar	 ~ ~	
				InsertOn	~T~	
					IActionsText ~[Get]~
					DActionsText ~[Save]~
					OActionsText ~[Save]~
				Tooltip ~Enter a chroma key file.~;

		ypos = <ypos> + 35;
		Define: ChromaKeyLandscapeBGButton Using DDWinCtrlDef AsSymbol ChromaKeyLandscapeBGButton
		fields:	TypeName Button
				Text ~Chroma Key Landscape Background...~
				Position $LeftMargin <ypos>  190  20
				GenConField ~CommonChromaKeyLandscapeBGFile:~
				IActionsText ~[Get]~
				DActionsText ~[FileOpenBuildThumbnailRegister UpdateControl(ChromaKeyLandscapeEditText)]~
				OActionsText ~[NULL]~
				Tooltip ~Select an chroma key Landscape bg~;

		Define: ClearChromaKeyLGButton Using DDWinCtrlDef AsSymbol ClearChromaKeyLGButton
				fields:	TypeName Button
				Text ~Remove~
				Position ChromaKeyLandscapeBGButton(GetRight,Position)+5, <ypos> , 162 , 20
				GenConField ~CommonChromaKeyLandscapeBGFile:~
				IActionsText ~[Get]~
				DactionsText ACTIONS ( 
									ExecFile(ClearField.txt)
									Exec(ClearField(MajorKeywordsDialog,~CommonChromaKeyLandscapeBGFile:~);)
									Update(ChromaKeyLandscapeEditText)
									Update(ChromaKeyLandscapeBGButton)
									)							
				OActionsText ~[NULL]~
				Tooltip ~Clear the Chroma key Landscape background file~;
		ypos = <ypos> + 30;
		Define: ChromaKeyLandscapeStaticText Using DDWinCtrlDef AsSymbol ChromaKeyLandscapeStaticText
		fields:	TypeName StaticText
				Position $LeftMargin <ypos>  $StaticTextWidth+160  20
				Text ~Chroma Key Landscape Background:~;

		ypos = <ypos> + 30;
		Define: ChromaKeyLandscapeEditText Using DDWinCtrlDef AsSymbol ChromaKeyLandscapeEditText
		fields:	TypeName MaskedEditText
				Position ChromaKeyLandscapeStaticText(GetLeft,Position),  <ypos> , 360 , 20
				GenConField ~CommonChromaKeyLandscapeBGFile:~
				RightJustified 1
				Mask			~<$[DATABASE FieldTypes].FilePath[Mask]>~
				PromptChar		~<$[DATABASE FieldTypes].FilePath[PromptChar]>~
				AllowedChars	~<$[DATABASE FieldTypes].FilePath[AllowedChars]>~
				DisallowedChars ~<$[DATABASE FieldTypes].FilePath[DisallowedChars]>~
				Tooltip ~Edit background file path~
				PromptChar	 ~ ~	
				InsertOn	~T~	
				IActionsText ~[Get]~
				DActionsText ~[Save]~
				OActionsText ~[Save]~
				Tooltip ~Enter a chroma key file.~;

		ypos = <ypos> + 30;
		Define: ChromaKeyBackIDStaticText Using DDWinCtrlDef AsSymbol ChromaKeyBackIDStaticText
		fields:	TypeName StaticText
				Position $LeftMargin <ypos>  $StaticTextWidth+40  30
				Text ~Chroma Key Background ID:~

		Define: ChromaKeyBackIDComboBox Using DDWinCtrlDef
		fields:	TypeName SComboBox
				GenConName THIS
				GenConField ~CommonChromakeybgid:~
				Position ChromaKeyBackIDStaticText(GetRight,Position)+5,  <ypos> , 240 , 150
				IActionsText 	ACTIONS ( 
								ExecFile(MajorKeywordsDialogRoutines.txt)
								Exec(PopulateBackgrounds();)
								)
				DActionsText 	ACTIONS ( 
								ExecFile(MajorKeywordsDialogRoutines.txt)
								Exec(SaveBackgroundID();)
								)
				Tooltip ~Select a background id~;

		ypos = <ypos> + 50;
		Define: CreatedFromSubjectInfoStaticText Using DDWinCtrlDef AsSymbol CreatedFromSubjectInfoStaticText
		fields:	TypeName StaticText
				Position $LeftMargin <ypos>  $StaticTextWidth+100  40
				Text ~That caused this order item to be created:~;

		Define: CreatedFromSubjectInfoEditText Using DDWinCtrlDef AsSymbol CreatedFromSubjectInfoEditText
		fields:	TypeName MaskedEditText
				Position CreatedFromSubjectInfoStaticText(GetRight,Position)+ 10,  <ypos> , 100 , 20
				GenConField ~CreatedFromSubjectInfoField:~
				Mask			~<$[DATABASE FieldTypes].FilePath[Mask]>~
				PromptChar		~<$[DATABASE FieldTypes].FilePath[PromptChar]>~
				AllowedChars	~<$[DATABASE FieldTypes].FilePath[AllowedChars]>~
				DisallowedChars ~<$[DATABASE FieldTypes].FilePath[DisallowedChars]>~
				PromptChar	 ~ ~	
				InsertOn	~T~	
				IActionsText ~[Get]~
				DActionsText ~[Save]~
				OActionsText ~[Save]~
				Tooltip ~Enter subject info field name that caused the order item to be created.  This field will be blank if this order item was not created through subject information.~

	Define: ZZGroupBox Using DDWinCtrlDef AsSymbol ZZGroupBox
	fields:	TypeName GroupBox
			Text ~Quantity or Product Subject Information Field~
			Position $LeftMargin - 5, CreatedFromSubjectInfoStaticText(GetTop,Position) - 17, 370, CreatedFromSubjectInfoStaticText(GetBottom,Position) - CreatedFromSubjectInfoStaticText(GetTop,Position) + 34  ;

	Define: HelpButton Using DDWinCtrlDef
	fields:	TypeName		Button
			IActionsText	~[Enable(HelpButton)]~
			Text			~Help~
			Position		30 , <DialogHeight> - 30, $HelpButtonWidth, $HelpButtonLength
			DActionsText	ACTION SHOWHELPPAGE ( KPISHelpFile "MiscSettings.htm" ) ;

	Define: OKButton Using DDWinCtrlDef
	fields:	TypeName Button
			Text ~Close~
			Position 350 , <DialogHeight> - 30, 50 , 20
			IActionsText ~[Get]~
			DActionsText ~[PerformOActions Close]~
			OActionsText ~[NULL]~
			Tooltip ~Close window~;


}

Hang: MajorKeywordsDialog ~[UI Dialogs]~ ;
