Include: ~Classes\BaseGrid~;

VOID TemplatesGrid::TemplatesGrid()					// CONSTRUCTOR
{
	TableName = ~Templates~;
	DocumentQuery = ~Select * from <TableName> Order By TemplateName~;
	Title = ~Templates~;
	WindowWidth = 40;
	WindowHeight = 30;
	HelpFile = ~AdminHelpFile~;
	HelpPage = ~Templates.htm~;
}

STR TemplatesGrid::GetKey( &Item )			{ return ~TemplateName = '<$con.Item[TemplateName]>'~; }  // PRIMARY KEY FOR THE TABLE

VOID TemplatesGrid::OnAddRecord( &NewRow )	{ NewRow( SetValues,Category,~~,TemplateName,~~,Description,~~ ); }

NUMERIC TemplatesGrid::ChangeRecordAudits( &Changed )		// CALLED BEFORE ADDING OR CHANGING A RECORD
{
	if ( IsNULL(~<$Con.Changed[Category]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  Category cannot be blank.~ ) ); }

	if ( IsNULL(~<$Con.Changed[TemplateName]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  Template cannot be blank.~ ) ); }

	return TRUE; 
}

NUMERIC Init()
{
	Class( TemplatesGrid,Extends,BaseGrid );

	TemplatesGrid( New,Grid );

	Grid.DefineWindow();
	Grid.Init();

	return Global( Grid );
}

Init();