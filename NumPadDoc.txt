NUMERIC DefineNumPadDialog( Prompt,Left,Top,SetRoutine,CancelRoutine )
{
	if ( !DictionaryExists( DDNumPadDialog ) )
	{
        Dictionary: DDNumPadDialog 
            Fields: Name	Qty		type long
 	}

	Define: NumPadDlgData Using DDNumPadDialog

	DialogWidth = 300; DialogHeight = 300;

	vGap = 5; hGap = 6; ButtonWidth = 29; ButtonHeight = 20; EditTextHeight = $ButtonHeight;  ButtonGap = 3;

	Define: aDialog Using DDWinDef
		Fields:	POSITION				<Left>,<Top>,$DialogWidth,$DialogHeight 
				TITLE					~Enter~
				TYPENAME				~Dialog~ 
				OACTIONSTEXT			ACTION EXEC ( <CancelRoutine>(); DoNumPadCancelButton();   )
				HACTIONSTEXT			ACTION SHOWHELPPAGE ( KPISHelpFile "EnterNumber.htm" ) 

		Contains: INLISTORDER
		{
			Define: QtyPrompt Using DDWinCtrlDef AsSymbol QtyPrompt 
				Fields: TypeName		StaticText
						Text			Translate( ~<Prompt>~ )
						RightJustified	TRUE
						POSITION		$hGap $vGap,50,$EditTextHeight

			Define: QtyField Using DDWinCtrlDef AsSymbol QtyField 
				Fields: TypeName		MaskedEditText  
						Mask			~####~
						PromptChar		~ ~
						Position		QtyPrompt(GetRight,Position) + 2,QtyPrompt(GetTop,Position)-2,35,<EditTextHeight> 
						IActionsText	ACTIONS ( Get )
						DActionsText	ACTIONS ( Save )
						OActionsText	ACTIONS ( Save )
						GenConName       THIS
						GenConField		~Qty~
						WantReturnKey	~T~
						ReturnKeyActionsText ACTION EXEC ( <SetRoutine>(); DoNumPadCancelButton(); )
						Tooltip         ~Type a number~;

			Define: Qty1Button Using DDWinCtrlDef AsSymbol Qty1Button 
				Fields: TypeName		Button  
						Position		QtyPrompt(GetLeft,Position),QtyPrompt(GetBottom,Position)+$vGap,$ButtonWidth,<EditTextHeight> 
						DActionsText	ACTION EXEC ( QtyDigit( 1 ) )
						Text			~&1~
						Tooltip         Translate(~Set Quantity to 1~);

			Define: Qty2Button Using DDWinCtrlDef AsSymbol Qty2Button 
				Fields: TypeName		Button  
						Position		Qty1Button(GetRight,Position) + $ButtonGap,Qty1Button(GetTop,Position),$ButtonWidth,<EditTextHeight> 
						DActionsText	ACTION EXEC ( QtyDigit( 2 ) )
						Text			~&2~
						Tooltip         Translate(~Set Quantity to 2~);

			Define: Qty3Button Using DDWinCtrlDef AsSymbol Qty3Button 
				Fields: TypeName		Button  
						Position		Qty2Button(GetRight,Position) + $ButtonGap,Qty1Button(GetTop,Position),$ButtonWidth,<EditTextHeight> 
						DActionsText	ACTION EXEC ( QtyDigit( 3 ) )
						Text			~&3~
						Tooltip         Translate(~Set Quantity to 4~);

			Define: Qty4Button Using DDWinCtrlDef AsSymbol Qty4Button 
				Fields: TypeName		Button  
						Position		Qty1Button(GetLeft,Position),Qty1Button(GetBottom,Position)+$vGap,$ButtonWidth,<EditTextHeight> 
						DActionsText	ACTION EXEC ( QtyDigit( 4 ) )
						Text			~&4~
						Tooltip         Translate(~Set Quantity to 8~);

			Define: Qty5Button Using DDWinCtrlDef AsSymbol Qty5Button 
				Fields: TypeName		Button  
						Position		Qty4Button(GetRight,Position) + $ButtonGap,Qty4Button(GetTop,Position),$ButtonWidth,<EditTextHeight> 
						DActionsText	ACTION EXEC ( QtyDigit( 5 ) )
						Text			~&5~
						Tooltip         Translate(~Set Quantity to 5~);

			Define: Qty6Button Using DDWinCtrlDef AsSymbol Qty6Button 
				Fields: TypeName		Button  
						Position		Qty5Button(GetRight,Position) + $ButtonGap,Qty5Button(GetTop,Position),$ButtonWidth,<EditTextHeight> 
						DActionsText	ACTION EXEC ( QtyDigit( 6 ) )
						Text			~&6~
						Tooltip         Translate(~Set Quantity to 6~);

			Define: Qty7Button Using DDWinCtrlDef AsSymbol Qty7Button 
				Fields: TypeName		Button  
						Position		Qty1Button(GetLeft,Position),Qty6Button(GetBottom,Position)+$vGap,$ButtonWidth,<EditTextHeight> 
						DActionsText	ACTION EXEC ( QtyDigit( 7 ) )
						Text			~&7~
						Tooltip         Translate(~Set Quantity to 7~);

			Define: Qty8Button Using DDWinCtrlDef AsSymbol Qty8Button 
				Fields: TypeName		Button  
						Position		Qty4Button(GetRight,Position) + $ButtonGap,Qty7Button(GetTop,Position),$ButtonWidth,<EditTextHeight> 
						DActionsText	ACTION EXEC ( QtyDigit( 8 ) )
						Text			~&8~
						Tooltip         Translate(~Set Quantity to 8~);

			Define: Qty9Button Using DDWinCtrlDef AsSymbol Qty9Button 
				Fields: TypeName		Button  
						Position		Qty8Button(GetRight,Position) + $ButtonGap,Qty8Button(GetTop,Position),$ButtonWidth,<EditTextHeight> 
						DActionsText	ACTION EXEC ( QtyDigit( 9 ) )
						Text			~&9~
						Tooltip         Translate(~Set Quantity to 9~);

			Define: Qty0Button Using DDWinCtrlDef AsSymbol Qty0Button 
				Fields: TypeName		Button  
						Position		Qty1Button(GetLeft,Position),Qty9Button(GetBottom,Position)+$vGap,$ButtonWidth,<EditTextHeight> 
						DActionsText	ACTION EXEC ( QtyDigit( 0 ) )
						Text			~&0~
						Tooltip         Translate(~Set Quantity to 0~);

			Define: PlusQtyButton Using DDWinCtrlDef AsSymbol PlusQtyButton 
				Fields: TypeName		Button  
						Position		Qty0Button(GetRight,Position) + $ButtonGap,Qty0Button(GetTop,Position),$ButtonWidth,<EditTextHeight> 
						DActionsText	ACTION EXEC ( IncQty( 1 ) )
						Text			~+~
						Tooltip         Translate(~Add 1 to the quantity~);

			Define: MinusQtyButton Using DDWinCtrlDef AsSymbol MinusQtyButton 
				Fields: TypeName		Button  
						Position		PlusQtyButton(GetRight,Position) + $ButtonGap,PlusQtyButton(GetTop,Position),$ButtonWidth,<EditTextHeight> 
						DActionsText	ACTION EXEC ( IncQty( -1 ) )
						Text			~-~
						Tooltip         Translate(~Subtract 1 from the quantity~);

			Define: ClearQtyButton Using DDWinCtrlDef AsSymbol ClearQtyButton 
				Fields: TypeName		Button  
						Position		Qty1Button(GetLeft,Position),Qty0Button(GetBottom,Position)+$vGap,44,<EditTextHeight> 
						DActionsText	ACTION EXEC ( SetQty(~0~) )
						Text			~Clear~
						Tooltip         Translate(~Clear the quantity~);

			Define: SetQtyButton Using DDWinCtrlDef AsSymbol SetQtyButton 
				Fields: TypeName		Button  
						Position		ClearQtyButton(GetRight,Position)+$hGap,ClearQtyButton(GetTop,Position),ClearQtyButton(GetWidth,Position),<EditTextHeight> 
						DActionsText	ACTION EXEC ( <SetRoutine>(); DoNumPadCancelButton(); )
						Text			~Enter~
						Tooltip         Translate(~Accept the entered quantity~);

		}


	DialogWidth = aDialog(GetMaxRight,Position) + $hGap * 2 ;
	DialogHeight = aDialog(GetMaxBottom,Position) + $vGap + 30;

	aDialog( Set,Position,~<Left> <Top> <DialogWidth> <DialogHeight>~ );

	GenDlg( NumPadDlg,Definition,aDialog,Data,NumPadDlgData,Document,$Doc.This,New,Temporary );
	Global( NumPadDlg,NumPadDlgData );

	return TRUE;
}

FirstDigit = TRUE;

VOID SetQty( Qty )
{
	NumPadDlg( SetStrings,Qty,~<Qty>~ );
	FirstDigit = TRUE;
}

VOID IncQty( Delta )
{
	NumPadDlg( GetInput,GetStrings,Qty,Qty );

	if ( ~Qty~ == ~~ )
	{
		Qty = 0;
	}

	SetQty( <Qty> + <Delta> );

	FirstDigit = FALSE;

	NumPadDlg( SetControlFocus,QtyField );
}


VOID QtyDigit( Num )
{
	NumPadDlg( GetInput,GetStrings,Qty,Qty );

	Qty = ( <Qty> == 1 && <FirstDigit> ) ? ~<Num>~ : ~<Qty><Num>~;

	if ( <Qty> < 999 )
	{
		SetQty( <Qty> );
	}

	NumPadDlg( SetControlFocus,QtyField );

	FirstDigit = FALSE;
}



NUMERIC DoNumPadCancelButton()
{
	NumPadDlg( End );
	ForgetGlobal( NumPadDlg,NumPadDlgData );


	return TRUE;
}


