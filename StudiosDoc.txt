Include: ~FormattingRoutines~;

IncludeClass( BaseGrid );

VOID Studios::Studios()					// CONSTRUCTOR
{
	TableName = ~Studios~;
	Title = ~Studios~;
	WindowTop = 50;
	WindowWidth = 100;
	WindowHeight = 50;
}

STR Studios::GetKey( &Item )					// PRIMARY KEY FOR THE TABLE
{
	return ~ID = '<$con.Item[ID]>'~;
}


NUMERIC Studios::ChangeRecordAudits( &Changed )	// CALLED BEFORE ADDING OR CHANGING A RECORD
{
	if ( IsNULL(~<$Con.Changed[ID]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  ID cannot be blank.~ ) ); }

	return TRUE;
}


NUMERIC Studios::OnAddRecord( &NewRow )
{
	return TRUE;
}


NUMERIC Init( Which,Query )
{
	if ( Defined( Grid ) )
	{
		return Grid.ReOpen();
	}

	Class( Studios,Extends,BaseGrid );

	Studios( New,Grid );

	Grid.Set(DocumentQuery,~<Query>~ );
	Grid.Set(Title,~Studios - <which>~ );

	Grid.DefineWindow();
	Grid.Init();

	return Global( Grid );
}



