
DialogWidth = 300;
DialogHeight = 260;
LeftMargin = 20;
StaticTextWidth = 110;
StaticTextHeight = 20;
CheckBoxWidth = 200;
CheckBoxHeight = 20;
ComboBoxWidth = 120;
ComboBoxHeight = 150;
hGap = vGap = 5;


EditTextWidth = 50;
EditTextHeight = 20;
SliderWidth = 170;
ButtonWidth = 150;
SmallButtonWidth = 50;
ButtonHeight = 20; 
VerticalSeparation = 30;
InitialVerticalPosition = 70;
GenCon(MagicWandToolParameters,GetGenCon,MagicWandToolParameters);

VOID CreateDialog()
{
	Define: MagicWandToolSetupDialog Using DDWinDef
	fields: Position 100 100 <DialogWidth> <DialogHeight>
			Title ~Magic Wand Tool Properties~
			TypeName ~Dialog~
			OActionsText ACTION EXEC ( CancelPressed() )
			HACTIONSTEXT	ACTION SHOWHELPPAGE ( KPISHelpFile "Magicwandtool.htm" )

	Contains: INLISTORDER
	{

		ypos = 10;

		Define: ToleranceStaticText Using DDWinCtrlDef AsSymbol ToleranceStaticText
		fields:	TypeName StaticText
				Text ~Tolerance:~
				Position $LeftMargin + 10, <ypos>,  <StaticTextWidth> , 20

		Define: ToleranceEditText Using DDWinCtrlDef AsSymbol ToleranceEditText
		fields:	TypeName MaskedEditText
				Position (ToleranceStaticText(GetRight,Position) + $hGap) ToleranceStaticText(GetY,position) 80 20
				GenConName MagicWandToolParameters
				GenConField ~Tolerance~
				IActionsText ~[Get]~
				DActionsText ~[Save]~
				OActionsText ~[Save]~
				Mask		 ~###~
				AllowedChars ~~
				PromptChar	 ~ ~		

				Tooltip ~Enter maximum differences in pixel values (0-255) for matching colors~;

		Define: FeatherStaticText Using DDWinCtrlDef AsSymbol FeatherStaticText
		fields:	TypeName StaticText
				Text ~Feather (pixels):~
				Position $LeftMargin + 10, ToleranceEditText(GetBottom,Position),  <StaticTextWidth> , 20

		Define: FeatherEditText Using DDWinCtrlDef AsSymbol FeatherEditText
		fields:	TypeName MaskedEditText
				Position (FeatherStaticText(GetRight,Position) + $hGap) FeatherStaticText(GetY,position) 80 20
				GenConName MagicWandToolParameters
				GenConField ~Feathering~
				IActionsText ~[GET]~
				DActionsText ~[Save]~
				OActionsText ~[Save]~
				Mask		 ~###~
				AllowedChars ~~
				PromptChar	 ~ ~		
				Tooltip ~Enter the number of pixels to feather at edges of mask~

/*		Define: WantAllSegmentsCheckBox Using DDWinCtrlDef AsSymbol FeatherEditText
		fields:	TypeName CheckBox
				Position (FeatherStaticText(GetLeft,Position)) FeatherStaticText(GetBottom,position) + 10 200 20
				GenConName MagicWandToolParameters
				GenConField ~WantAllSegments~
				Text ~Use Entire image~
				IActionsText ~[GET]~
				DActionsText ~[NULL]~
				OActionsText ~[Save]~
				Tooltip ~Check this box to find matching pixels everywhere in the image.  Uncheck this box to only find matching pixels that are adjacent to the point clicked, or adjacent to other matching pixels.~
*/

		Define: OKButton Using DDWinCtrlDef AsSymbol OKButton
		fields:	TypeName DefaultButton
				Text ~OK~
				Position <DialogWidth> - 80 , FeatherEditText(GetBottom,position) + $vGap,  <SmallButtonWidth> , <ButtonHeight>
				IActionsText ~[Get]~
				DActionsText ACTION EXEC ( Done() )
				OActionsText ~[NULL]~
				Tooltip ~Save values~;

/*		Define: CancelButton Using DDWinCtrlDef AsSymbol CancelButton
		fields:	TypeName Button
				Text ~Cancel~
				Position <DialogWidth> - 150 , OKButton(GetTop,position) , <SmallButtonWidth> , <ButtonHeight>
				IActionsText ~[Get]~
				DActionsText ACTION EXEC ( CancelPressed() )
				OActionsText ~[NULL]~
				Tooltip ~Cancel~;
*/
	}

	ypos = OKButton(GetBottom,Position) + 50;

	if ( !Defined(dlg) )
	{
		MagicWandToolSetupDialog(Set,Position,~50 50 <DialogWidth> <ypos> ~);
		// look up a GenCon called MagicWandToolParameters and refer to it as MagicWandToolParameters inside this script
		GenDlg( dlg,Definition,MagicWandToolSetupDialog,Data,MagicWandToolParameters,Document,$Doc.This,New,Temporary );
		Global( dlg );
	}

	else
	{
		dlg (SetFocus);
	}

}

VOID ReOpen()
{
	dlg( SetFocus );
}

Include: ~UpdateUserSettings~;

VOID Done()
{
	dlg( GetInput );
	
	UpdateUserSettings( MagicWandToolParameters,MagicWandToolParameters );

	dlg( End );
	Exit();
}

VOID CancelPressed()
{
	dlg( End );
	Exit();
}

CreateDialog();


