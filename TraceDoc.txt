
Include: UtilityRoutines;

if ( !DictionaryExists( DDTraceDialog ) )
{
	Dictionary: DDTraceDialog
		Fields:	Name	TRACE_INPUT			Type Long
		Fields:	Name	TRACE_LINES			Type Long
		Fields:	Name	TRACE_SCAN			Type Long
		Fields:	Name	TRACE_SETS			Type Long
		Fields:	Name	TRACE_HEAP			Type Long
		Fields:	Name	TRACE_YACC			Type Long
		Fields:	Name	TRACE_LEX			Type Long
		Fields:	Name	TRACE_DEVSTUDIO		Type Long
		Fields:	Name	TRACE_DESTRUCTS		Type Long
		Fields:	Name	TRACE_SCRIPTS		Type Long
		Fields:	Name	TRACE_PREVIEW		Type Long
		Fields:	Name	TRACE_PREVIEWDETAIL	Type Long 
		Fields:	Name	TRACE_TIMING		Type Long 
		Fields:	Name	TRACE_SUBROUTINES	Type Long 
		Fields:	Name	TRACE_MEMORY		Type Long 

	Dictionary: DDGlobalTraceFileDisposition
		Fields: Name	TraceFileDisposition Type Long

	//	THE TRANSLATION NEED TO MATCH THE CORRESPONDING VALUES IN UIC.H

	Define: GlobalTraceChoices0 Using DDListBoxItemTranslations
		Fields: FieldName				~TraceFileDisposition~
		Fields: ListBoxItemText			Translate(~Job settings determine whether to keep trace files~)
		Fields: FieldValue				~0~
	Hang: GlobalTraceChoices0  ~[UI TranslationTables]~

	Define: GlobalTraceChoices1 Using DDListBoxItemTranslations	// UIC_TRACEON	
		Fields: FieldName				~TraceFileDisposition~
		Fields: ListBoxItemText			Translate(~Keep all trace files~)
		Fields: FieldValue				~1~
	Hang: GlobalTraceChoices1  ~[UI TranslationTables]~

	Define: GlobalTraceChoices2 Using DDListBoxItemTranslations		// UIC_TRACEANDDELETE
		Fields: FieldName				~TraceFileDisposition~
		Fields: ListBoxItemText			Translate(~Delete trace files on successful completion~)
		Fields: FieldValue				~2~
	Hang: GlobalTraceChoices2  ~[UI TranslationTables]~

	StringList: Name ~GlobalTraceChoices~
		Fields:	String	Translate(~Job settings determine whether to keep trace files~)
		Fields:	String	Translate(~Delete trace files on successful completion~)
		Fields:	String	Translate(~Keep all trace files~)
	Hang: GlobalTraceChoices	~[STRINGS]~ ;

	Define: GlobalTraceFileDisposition Using DDGlobalTraceFileDisposition
		Fields: TraceFileDisposition	0
	Hang: GlobalTraceFileDisposition ~[GENCONS]~; 
}

Define: TraceOptions Using DDTraceDialog;


// THIS MUST MATCH THE NAME AND ORDER AS IN SCANNER.HPP

TRACE_INPUT				= 1;
TRACE_LINES				= 2;
TRACE_SCAN				= 4;
TRACE_SETS				= 8;
TRACE_HEAP				= 16;
TRACE_YACC				= 32;
TRACE_LEX				= 64;
TRACE_DEVSTUDIO			= 128;
TRACE_DESTRUCTS			= 256;
TRACE_SCRIPTS			= 512;
TRACE_PREVIEW			= 1024;
TRACE_PREVIEWDETAIL		= 2048;
TRACE_TIMING			= 4096;
TRACE_SUBROUTINES		= 8192;
TRACE_MEMORY			= 8192 * 2;

// GET THE CURRENT STATE OF THE GLOBAL TRACE OPTIONS

TraceOptions( Set,TRACE_INPUT,TraceParse( WantGlobal,<TRACE_INPUT> ) );
TraceOptions( Set,TRACE_LINES,TraceParse( WantGlobal,<TRACE_LINES> ) );
TraceOptions( Set,TRACE_SCAN,TraceParse( WantGlobal,<TRACE_SCAN> ) );
TraceOptions( Set,TRACE_SETS,TraceParse( WantGlobal,<TRACE_SETS> ) );
TraceOptions( Set,TRACE_HEAP,TraceParse( WantGlobal,<TRACE_HEAP> ) );
TraceOptions( Set,TRACE_YACC,TraceParse( WantGlobal,<TRACE_YACC> ) );
TraceOptions( Set,TRACE_LEX,TraceParse( WantGlobal,TRACE_LEX> ) );
TraceOptions( Set,TRACE_DEVSTUDIO,TraceParse( WantGlobal,<TRACE_DEVSTUDIO> ) );
TraceOptions( Set,TRACE_DESTRUCTS,TraceParse( WantGlobal,<TRACE_DESTRUCTS> ) );
TraceOptions( Set,TRACE_SCRIPTS,TraceParse( WantGlobal,<TRACE_SCRIPTS> ) );
TraceOptions( Set,TRACE_PREVIEW,TraceParse( WantGlobal,<TRACE_PREVIEW> ) );
TraceOptions( Set,TRACE_PREVIEWDETAIL,TraceParse( WantGlobal,<TRACE_PREVIEWDETAIL> ) );
TraceOptions( Set,TRACE_SUBROUTINES,TraceParse( WantGlobal,<TRACE_SUBROUTINES> ) );
TraceOptions( Set,TRACE_MEMORY,TraceParse( WantGlobal,<TRACE_MEMORY> ) );



VOID ReOpen()
{
	// COMES HERE IF SOMEONE TRIES TO OPEN THIS SCRIPT TWICE
}


CurrentY = hGap = vGap = 4;  BoxWidth = 150;	ButtonWidth = 70;	ButtonHeight = 20;	

VOID DefineDialog()
{
	Define: TraceDialog Using DDWinDef
		Fields:	POSITION				100, 100, 300,600 
				TITLE					Translate( ~Set Global Tracing Options~ )
				TYPENAME				Dialog 
				WANTSMINIMIZEBOX		TRUE
				OACTIONSTEXT			ACTION EXEC ( CloseDialog() )
				HACTIONSTEXT			ACTION SHOWHELPPAGE ( KPISHelpFile "SetTracingOptions.htm" ) 

		Contains: INLISTORDER
		{
			CurrentY = DefineCheckBox( TRACE_SCAN,~Trace Job Parsing~,$CurrentY,Translate(~Trace the execution of each line in a job or layout~) ) + $vGap;
			CurrentY = DefineCheckBox( TRACE_PREVIEW,~Trace Job Editing~,$CurrentY,Translate(~Trace the editing of a job or layout~) ) + $vGap;
			CurrentY = DefineCheckBox( TRACE_PREVIEWDETAIL,~Trace Job Editing (Detailed)~,$CurrentY,Translate(~Trace the editing of a job or layout in detail~) ) + $vGap;
			CurrentY = DefineCheckBox( TRACE_SCRIPTS,~Trace Scripts~,$CurrentY,Translate(~Trace every script (that are not rendering jobs).~) ) + $vGap;
			//CurrentY = DefineCheckBox( TRACE_LINES,~Trace Script Detail~,$CurrentY,Translate(~Trace each line as it executes when tracing scripts~) ) + $vGap;
			CurrentY = DefineCheckBox( TRACE_SUBROUTINES,~Trace Subroutines~,$CurrentY,Translate(~Trace each subroutine as it executes when tracing scripts~) ) + $vGap;
			CurrentY = DefineCheckBox( TRACE_MEMORY,~Trace Free Memory~,$CurrentY,Translate(~Report free memory with each traced statement~) ) + $vGap;


			IF 0	// THESE ARE JUST FOR DEVELOPER DEBUGGING
			{
				CurrentY = DefineCheckBox( TRACE_INPUT,~Trace Input~,$CurrentY,Translate(~Trace each line as it executes~) ) + $vGap;
				CurrentY = DefineCheckBox( TRACE_LINES,~Trace Lines~,$CurrentY,Translate(~Trace each line as it executes~) ) + $vGap;
				CurrentY = DefineCheckBox( TRACE_SETS,~Trace Sets~,$CurrentY,Translate(~Trace every Set statement~) ) + $vGap;
				CurrentY = DefineCheckBox( TRACE_HEAP,~Trace Heap~,$CurrentY,Translate(~Trace every Set statement~) ) + $vGap;
				CurrentY = DefineCheckBox( TRACE_YACC,~Trace Yacc~,$CurrentY,Translate(~Trace every Set statement~) ) + $vGap;
				CurrentY = DefineCheckBox( TRACE_LEX,~Trace Lex~,$CurrentY,Translate(~Trace every Set statement~) ) + $vGap;
				if ( Debug( IsDebugVersion) )
				{
					CurrentY = DefineCheckBox( TRACE_DEVSTUDIO,~Trace to DevStudio~,$CurrentY,Translate(~Trace every Set statement~) ) + $vGap;
				}
				CurrentY = DefineCheckBox( TRACE_DESTRUCTS,~Trace Destructs~,$CurrentY,Translate(~Trace every Set statement~) ) + $vGap;
				CurrentY = DefineCheckBox( TRACE_PREVIEWDETAIL,~Trace Job Preview Detail~,$CurrentY,Translate(~Trace every Set statement~) ) + $vGap;
			}

			Define: KeepTraceFileComboBox Using DDWinCtrlDef AsSymbol KeepTraceFileComboBox 
				Fields: TypeName        SComboBox  
						Position		$hGap,$CurrentY + $vGap,275,100
						IActionsText	~[GetList(GlobalTraceChoices) Get]~
						DActionsText	~[Save]~
						OActionsText	~[Save]~
						GenConName		GlobalTraceFileDisposition
						GenConField		~TraceFileDisposition~
						Tooltip			~Determine whether or not Trace Files should be kept at job completion~ ;

			Define: SessionLogButton Using DDWinCtrlDef AsSymbol SessionLogButton 
				Fields: TypeName        Button  
						Position		$hGap,
										KeepTraceFileComboBox(GetTop,Position)+40,133,$ButtonHeight
						Text			Translate( ~Session Log~ )
						DActionsText	ACTION EXEC ( OnSessionLogButton() )
						Tooltip			~Open the session log in NotePad~ ;

			Define: NewSessionLogButton Using DDWinCtrlDef AsSymbol NewSessionLogButton 
				Fields: TypeName        Button  
						Position		SessionLogButton(GetRight,Position)+$hGap,
										SessionLogButton(GetTop,Position),SessionLogButton(GetWidth,Position),$ButtonHeight
						Text			Translate( ~New Session Log~ )
						DActionsText	ACTION EXEC ( OnNewSessionLogButton() )
						Tooltip			~Close the current session log and open a new one~ ;

			CurrentY = NewSessionLogButton(GetBottom,Position) + 10;
		}

	CurrentRight = KeepTraceFileComboBox(GetRight,Position) + $hGap*2;
	CurrentY += $vGap*3 + 25;
	TraceDialog( Set,Position,~20  20  <CurrentRight>  <CurrentY>~ );

	GenDlg( dlg,Definition,TraceDialog,Data,TraceOptions,Document,$Doc.This,New,Temporary );
	Global( dlg,TraceDialog );
}


NUMERIC DefineCheckBox( GenConField,DisplayName,yPos,ToolTip )
{
	Define: <GenConField>CheckBox Using DDWinCtrlDef AsSymbol <GenConField>CheckBox
		Fields:	TypeName		CheckBox
				Position		$hGap,$yPos,$BoxWidth,$ButtonHeight
				GenConName		THIS
				GenConField		<GenConField>
				Text			Translate( ~<DisplayName>~ )
				IsTabStop		1
				IActions		ACTIONS ( Get )
				DActionsText	ACTION EXEC ( SetTraceOption(<GenConField>)  )
				OActionsText	ACTIONS ( Save )
				ToolTip			~<ToolTip>~

	return <GenConField>CheckBox(GetBottom,Position);
}

VOID OnSessionLogButton()
{
	DisplaySessionLog();
}

VOID OnNewSessionLogButton()
{
	Log( NextSessionLog );
}


VOID SetTraceOption( Which )
{
	dlg( GetInput );

	Value = TraceOptions( GetNumeric,<Which> );

	TraceParse( SetGlobal,<<Which>>,<Value> );

	Log( Session,~SetTraceOption <Which> = <Value>~ );
}


VOID CloseDialog()
{
	dlg( End );
	Exit();
}


VOID OnOKButton()
{
	CloseDialog();
}

Debug( SetDontDebugThis,TRUE );

DefineDialog();


