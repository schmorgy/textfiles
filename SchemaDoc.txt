
NUMERIC Init( SchemaType )
{
	SchemaDataWindow( Set,Title,~<SchemaType>~);

	if ( !PGenConList( SchemaList,Connect,Cursor,Keyset,Schema,~<SchemaType>~ ) )
		{ Error( Translate( ~Failed to query Schema of type <SchemaType>.  This is not an error.  It means your database manager does not support this type of query~ ) ); }

	SetDocumentData( SchemaList(GetObject) );

	Global( SchemaList );

	if ( !SchemaDataWindow( CreateWindow,Translate( ~Schema - <SchemaType>~ ) ) )
		{ Error( Translate( ~Failed to create the window~ ) ); }

	return TRUE;
}

NUMERIC OnCloseSchemaDataView()
{
	return SchemaDataWindow( ForceCloseWindow );
}


Define: SchemaDataWindow Using DDWinDef
	Fields:		Position				0 50 70 30
				IsPositionPercent		T

	Contains:	INLISTORDER
	{
		Define: SchemaDataView Using DDViewDef AsSymbol SchemaDataView
			Fields:	ViewType				ListView
					CloseActionsText		ACTION Call ( OnCloseSchemaDataView() )
					HActionsText			ACTION SHOWHELPPAGE ( AdminHelpFile "Database Info.htm" );
	}
	
IF 0	// THE FOLLOWING SCHEMA INQUIRIES ARE SUPPORTED
{
	Tables
	PrimaryKeys
	Asserts
	Catalogs
	CharacterSets
	CheckConstraints
	Collations
	Columns
	ColumnsDomainUsage
	ColumnPrivileges
	ConstraintColumnUsage
	ForeignKeys
	Indexes
	KeyColumnUsage
	Indexes
	ProcedureColumns
	ProcedureParameters
	Procedures
	ReferentialContraints
	Schemata
	Schemata
	SQLLanguages
	Statistics
	TableConstraints
	TablePrivileges
	Translations
	UsagePrivileges
}
