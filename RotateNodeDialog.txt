LeftMargin = 20;
StaticTextWidth = 70;
EditTextWidth = 70; 
MediumEditTextWidth = 120; 
SliderWidth = 170;
VerticalGap = 10;
HelpButtonXOffset = 15;	HelpButtonYOffset = 35;
HelpButtonWidth = 30;	HelpButtonLength = 20;
CropButtonWidth = 70;

// Note:  DActions fields in dialogs should be set up to save
// values each time the user moves a slider, edits a text field, etc.
// The reason is that UGenDlg is set up to copy data from its source GenCon
// to the control each time a view is activated.  If we activate a UGenDlg
// to move a slider, then click in the view, we copy the data from its GenCon
// to its control.  If we hadn't saved the new slider value as it changed, it
// can be wiped out.

Define: RotateNodeDialog Using DDWinDef // if the name is ever changed, you must also change UGenDlgBar::GetWindowPosition
fields: Position 390 20 260 110
		Title ~Rotate Node~
		AutoPosition 1
		TypeName ~DialogBar~
		Purpose ~RotateNode~
		IActionsText ~[NULL]~
		OActionsText ~[PerformOActions]~
		HACTIONSTEXT	ACTION SHOWHELPPAGE ( KPISHelpFile "INEdit.htm" );

Contains:
{

	ypos =  15 ;
	Define: RotateNodeStaticText Using DDWinCtrlDef AsSymbol RotateNodeStaticText
	fields:	TypeName StaticText
			Position $LeftMargin <ypos> $StaticTextWidth  20
			GenConName THIS
			Text ~Angle:~;

	Define: RotateNodeEditText Using DDWinCtrlDef AsSymbol RotateNodeEditText
	fields:	TypeName EditText
			Position RotateNodeStaticText(GetRight,Position) + 10 <ypos>  $EditTextWidth  20
			GenConField ~IRotation:~
			Mask		 ~############~
			InsertOn	~T~	
			AllowedChars ~-.~
			PromptChar	 ~ ~		
			Tooltip ~Rotate entire image, text, and frame by any angle in degrees (from -360 to 360).  A positive angle is a clockwise rotation~;

	ypos =  <ypos> + 30 ;
	Define: IRotationWarningStaticText Using DDWinCtrlDef AsSymbol IRotationWarningStaticText
	fields:	TypeName StaticText
			Position 10 <ypos>  210  30;
				
	Define: RotateNodeHelpButton Using DDWinCtrlDef
	fields:	TypeName		Button
			Text			~Help~
			Position		10,
							$ypos + 35,
							$HelpButtonWidth $HelpButtonLength
			DActionsText	ACTION SHOWHELPPAGE ( KPISHelpFile "RotateNode.htm" ) ;

	Define: OKButton Using DDWinCtrlDef
	fields:	TypeName Button
			Text ~Close~
			Position 50 
			$ypos + 35,
			80  20
			Tooltip ~Close window~;

	Define: PreviewButton Using DDWinCtrlDef
	fields:	TypeName Button
			Text ~Preview~
			Position 140  $ypos + 35,
			80  20
			Tooltip ~Preview Changes~;

}

Hang: RotateNodeDialog ~[UI Dialogs]~ ;
