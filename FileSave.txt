
VOID FileSave( DialogName, ControlName , FilePathAttr, SaveFileTypeAttr, ControlToUpdate)
{
	if ( !GenDlg( dlg,Is, ~<DialogName>~ ) )	{ return; }

	if ( dlg( GetDataGenCon, currentNode))
	{
		currentNode(GetValue, ~<SaveFileTypeAttr>~, CurrentFileType);

		Filter = ~Jpeg Files (*.jpg)|*.jpg||~;
		DefaultExtension = ~*.jpg~;

		if (String(BeginsWith, Upper(~EXIF~) , Upper(~<CurrentFileType>~)) != ~~)
		{
			Filter = ~Exif Files (*.jpg)|*o.jpg||~;
			DefaultExtension = ~*.jpg~;
		}
		else if (String(BeginsWith, Upper(~TIFF~) , Upper(~<CurrentFileType>~)) != ~~)
		{
			Filter = ~Tiff Files (*.tif)|*.tif||~;
			DefaultExtension = ~*.tif~;
		}

		if ( FileDialog( PATH,theFile ,DefaultExt, ~<DefaultExtension>~, Filter,~<Filter>~,HIDEREADONLY,SAVE ) )	
//		if ( FileDialog( PATH,theFile ,DefaultExt, ~*.jpg~, Filter,~Chart Files (*.xlc)|*.xlc|Worksheet Files (*.xls)|*.xls|Data Files (*.xlc;*.xls)|*.xlc; *.xls|All Files (*.*)|*.*||~,SAVE ) )	// ASK THE USER TO FIND THE FILE
		{  
			currentNode(Set, ~<FilePathAttr>~, ~<theFile>~);
			dlg(SetControlValue, ~<ControlToUpdate>~, ~<theFile>~);
		}
	}

	Exit();	

}

VOID FileSave2( DialogName, ControlName , FilePathAttr, SaveFileTypeAttr, ControlToUpdate)
{
	if ( !GenDlg( dlg,Is, ~<DialogName>~ ) )	{ return; }

	if ( dlg( GetDataGenCon, currentNode))
	{
		currentNode(GetValue, ~<SaveFileTypeAttr>~, CurrentFileType);

		Filter = ~Jpeg Files (*.jpg)|*.jpg||~;
		DefaultExtension = ~*.jpg~;

		if (String(BeginsWith, Upper(~EXIF~) , Upper(~<CurrentFileType>~)) != ~~)
		{
			Filter = ~Exif Files (*.jpg)|*o.jpg||~;
			DefaultExtension = ~*.jpg~;
		}
		else if (String(BeginsWith, Upper(~TIFF~) , Upper(~<CurrentFileType>~)) != ~~)
		{
			Filter = ~Tiff Files (*.tif)|*.tif||~;
			DefaultExtension = ~*.tif~;
		}

		if ( FileDialog( PATH,theFile ,DefaultExt, ~*.*~, HIDEREADONLY,SAVE ) )	
//		if ( FileDialog( PATH,theFile ,DefaultExt, ~<DefaultExtension>~, Filter,~<Filter>~,HIDEREADONLY,SAVE ) )	
//		if ( FileDialog( PATH,theFile ,DefaultExt, ~*.jpg~, Filter,~Chart Files (*.xlc)|*.xlc|Worksheet Files (*.xls)|*.xls|Data Files (*.xlc;*.xls)|*.xlc; *.xls|All Files (*.*)|*.*||~,SAVE ) )	// ASK THE USER TO FIND THE FILE
		{  
			currentNode(Set, ~<FilePathAttr>~, ~<theFile>~);
			dlg(SetControlValue, ~<ControlToUpdate>~, ~<theFile>~);
		}
	}

	Exit();	

}

/*
The lpszFilter parameter is used to determine the type of filename a file must have to be displayed 
in the file list box. The first string in the string pair describes the filter; the second string 
indicates the file extension to use. Multiple extensions may be specified using ‘;’ as the delimiter. 
The string ends with two ‘|’ characters, followed by a NULL character. You can also use a CString 
object for this parameter.

Chart Files (*.xlc)|*.xlc|Worksheet Files (*.xls)|*.xls|Data Files (*.xlc;*.xls)|*.xlc; *.xls|All Files (*.*)|*.*||"

|*.jpg|<CurrentFileType>
*/