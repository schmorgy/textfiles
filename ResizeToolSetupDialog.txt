DialogWidth = 300;
DialogHeight = 240;
LeftMargin = 20;
StaticTextWidth = 110;
StaticTextHeight = 20;
CheckBoxWidth = 200;
CheckBoxHeight = 20;
ComboBoxWidth = 120;
ComboBoxHeight = 150;
hGap = vGap = 5;


EditTextWidth = 50;
SEditTextHeight = 20;
SliderWidth = 170;
ButtonWidth = 150;
SmallButtonWidth = 50;
ButtonHeight = 20; 
VerticalSeparation = 30;
InitialVerticalPosition = 70;
IncludeClass(BaseHtml);
GenCon(ResizeToolParameters,GetGenCon,ResizeToolParameters);

VOID CreateDialog()
{
	Define: ResizeToolSetupDialog Using DDWinDef
	fields: Position 100 100 <DialogWidth> <DialogHeight>
			Title ~<$TR.LayoutsAndJobs(ResizeToolProperties)>~
			TypeName ~Dialog~
			OActionsText ACTION EXEC ( CancelPressed() )
			HACTIONSTEXT	ACTION SHOWHELPPAGE ( KPISHelpFile "Resizetool.htm" )

	Contains: INLISTORDER
	{

		ypos = 10;
		Define: ZZResizeExpansionTypeGroupBox Using DDWinCtrlDef AsSymbol ResizeExpansionTypeGroupBox
		fields:	TypeName GroupBox
				Text ~<$TR.LayoutsAndJobs(RectToolStyle)>~
				Position $LeftMargin <ypos> 250  70;

		Define: NormalRadioButton Using DDWinCtrlDef AsSymbol NormalRadioButton
		fields: TypeName RadioButton  
				Position $LeftMargin + 10, ResizeExpansionTypeGroupBox(GetTop, position) + $vGap * 3, 220, 20 
				IActionsText ~[Get]~
				DActionsText	~[
								CheckButton(NormalRadioButton) 
								UncheckButton(ConstantAspectRatioRadioButton) 
								Save
								]~
				OActionsText ~[Save]~
				GenConName ResizeToolParameters
				GenConField ~Style~
				RadioTrueValue ~N~
 				Text ~<$TR.LayoutsAndJobs(RectToolNormal)>~
				Tooltip ~<$TR.LayoutsAndJobs(ResizeToolConstrain)>~;

		Define: ConstantAspectRatioRadioButton Using DDWinCtrlDef AsSymbol ConstantAspectRatioRadioButton
		fields: TypeName RadioButton  
				Position $LeftMargin + 10,  NormalRadioButton(GetBottom,position) + $vGap, 220 ,20 
				IActionsText ~[Get]~
				DActionsText	~[
								CheckButton(ConstantAspectRatioRadioButton) 
								UncheckButton(NormalRadioButton)
								Save
								]~
				OActionsText ~[Save]~
				GenConName ResizeToolParameters
				GenConField ~Style~
				RadioTrueValue ~C~
 				Text ~<$TR.LayoutsAndJobs(RectToolConstrain)>~
				Tooltip ~<$TR.LayoutsAndJobs(ResizeToolConstrainTooltip)>~;

		Define: OKButton Using DDWinCtrlDef AsSymbol OKButton
		fields:	TypeName DefaultButton
				Text ~<$TR.LayoutsAndJobs(RectToolOK)>~
				Position <DialogWidth> - 80, ResizeExpansionTypeGroupBox(GetBottom, position) + $vGap, <SmallButtonWidth>, <ButtonHeight>
				IActionsText ~[Get]~
				DActionsText ACTION EXEC ( Done() )
				OActionsText ~[NULL]~
				Tooltip ~<$TR.LayoutsAndJobs(RectToolSaveTooltip)>~;
	}

	ypos = OKButton(GetBottom, Position) + 50;

	if ( !Defined(dlg) )
	{
		ResizeToolSetupDialog( Set, Position, ~50 50 <DialogWidth> <ypos> ~);
		// look up a GenCon called ResizeToolParameters on the tree and refer to it as ResizeToolParameters inside this script
		GenDlg( dlg,Definition,ResizeToolSetupDialog,Data,ResizeToolParameters,Document,$Doc.This,New,Temporary );
		Global( dlg );
	}

	else
	{
		dlg (SetFocus);
	}

}

//Hang: ResizeToolSetupDialog ~[UI Dialogs]~

Include: ~UpdateUserSettings~;
VOID Done()
{
	dlg( GetInput );
	
	UpdateUserSettings( ResizeToolParameters,ResizeToolParameters );
	dlg( End );
	Exit();
}

VOID CancelPressed()
{
	dlg( End );
	Exit();
}

BaseHtml::LoadTranslationFile(LayoutsAndJobs,LayoutsAndJobs,LayoutsAndJobs);
CreateDialog();