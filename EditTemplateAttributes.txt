IncludeClass( BaseGrid );


Class( TemplateARGrid,Extends,BaseGrid,
			Member,fBookID,Str,~~ );

VOID TemplateARGrid::TemplateARGrid()					// CONSTRUCTOR
{
	TableName = ~BookProductAttributes~;
	DocumentQuery = ~Select * from <TableName> Order By ProductID,Attribute,Sequence~;
	Title = ~Book Product Attributes~;
	WindowWidth = WindowHeight = 30;
	HelpFile = ~AdminHelpFile~;
	HelpPage = ~Templates.htm~;
	WindowLeft = 50;
	WindowWidth = 40;
}


STR TemplateARGrid::GetKey( &Item )			{ return ~ProductID = '<$con.Item[ProductID]>' And Attribute = '<$con.Item[Attribute]>'~; }  // PRIMARY KEY FOR THE TABLE

VOID TemplateARGrid::OnAddRecord( &NewRow )	
{ 
	NewRow( SetValues,ProductID,~~,Attribute,~~,Value,~~,Sequence,0 );
	
	if ( !IsNull(~<fBookID>~) )
	{
		NewRow( SetValues,ProductID,~<fBookID>~ );
	}
}

NUMERIC TemplateARGrid::ChangeRecordAudits( &Changed )		// CALLED BEFORE ADDING OR CHANGING A RECORD
{
	if ( IsNULL(~<$Con.Changed[ProductID]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  ProductID cannot be blank.~ ) ); }

	if ( IsNULL(~<$Con.Changed[Attribute]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  Attribute cannot be blank.~ ) ); }

	if ( IsNULL(~<$Con.Changed[Sequence]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  Sequence cannot be blank.~ ) ); }

	return TRUE; 
}

NUMERIC TemplateARGrid::OnDuplicateRecord( &NewRow )		// A CHANCE TO CHANGE THINGS BEFORE THE ROW IS INSERTED
{ 
	return NewRow( SetValues,Sequence,NewRow(GetNumeric,Sequence) + 10 );
}	

VOID TemplateARGrid::SetParams(TheTitle,Query,BookID)
{
	DocumentQuery = ~<Query>~;
	
	if ( DefinedAndNotNull(BookID) )
	{
		fBookID = ~<BookID>~;
		DocumentQuery = ~Select * from <TableName> where ProductID = '<BookID>' Order By ProductID,Attribute,Sequence~;
	}
		
	Title = ~<TheTitle>~;
	SetTitle(~<TheTitle>~);
}


NUMERIC Init(ThisTitle,Query,BookID)
{
	if (Defined(Grid))
	{
		Grid.SetParams(~<ThisTitle>~,~<Query>~,~<BookID>~);
		Grid.RefreshListView();
		return TRUE;
	}
	


	TemplateARGrid( New,Grid,~<BookID>~ );

	Grid.DefineWindow();
	
	Grid.SetParams(~<ThisTitle>~,~<Query>~,~<BookID>~);
	Grid.Init();

	return Global( Grid );
}