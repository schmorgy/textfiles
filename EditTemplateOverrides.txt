IncludeClass( BaseGrid);

VOID TemplateORGrid::TemplateORGrid()					// CONSTRUCTOR
{
	TableName = ~TemplateOverrides~;
	DocumentQuery = ~Select * from <TableName> Order By OverrideType,PrinterType,Sequence~;
	Title = ~Template Overrides~;
	WindowWidth = WindowHeight = 30;
	HelpFile = ~AdminHelpFile~;
	HelpPage = ~OrderItems.htm~;  
}

STR TemplateORGrid::GetKey( &Item )			{ return ~PrinterType = '<$con.Item[PrinterType]>' And OverrideType = '<$con.Item[OverrideType]>'~; }  // PRIMARY KEY FOR THE TABLE

VOID TemplateORGrid::OnAddRecord( &NewRow )	{ NewRow( SetValues,PrinterType,~~,OverrideType,~~,Sequence,0,DisplayName,~~,DefaultValue,~~ ); }

NUMERIC TemplateORGrid::ChangeRecordAudits( &Changed )		// CALLED BEFORE ADDING OR CHANGING A RECORD
{
	if ( IsNULL(~<$Con.Changed[PrinterType]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  PrinterType cannot be blank.~ ) ); }

	if ( IsNULL(~<$Con.Changed[OverrideType]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  OverrideType cannot be blank.~ ) ); }

	if ( IsNULL(~<$Con.Changed[Sequence]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  Sequence cannot be blank.~ ) ); }


	return TRUE;
}

VOID TemplateORGrid::SetParams(TheTitle,Query)
{
	DocumentQuery = ~<Query>~;
	Title = ~<TheTitle>~;
	SetTitle(~<TheTitle>~);
}

NUMERIC Init(ThisTitle,Query)
{
	if (Defined(Grid))
	{
		Grid.SetParams(~<ThisTitle>~,~<Query>~);
		Grid.RefreshListView();
		return TRUE;
	}
	Class( TemplateORGrid,Extends,BaseGrid );

	TemplateORGrid( New,Grid );
	Grid.DefineWindow();
	Grid.SetParams(~<ThisTitle>~,~<Query>~);
	Grid.Init();

	return Global( Grid );
}
