// Designed to work with spot color
VOID SaveComboBox(DialogName,ControlName,Keyword,OpacitySliderControlName,OpacityEditControlName)
{
	if (!GenDlg( dlg,Is,~<DialogName>~ ) )	
	{  
		return;
	}	
	if ( dlg( GetDataGenCon, currentNode))
	{
		dlg(GetControlValue, ~<ControlName>~ , CurrentValue); 
		if (IsNull(~<CurrentValue>~) )
		{
			dlg( EnableControls,1,~<OpacitySliderControlName>~,~<OpacityEditControlName>~);
			dlg( EnableControls,1,~<OpacityEditControlName>~,~<OpacityEditControlName>~);
		}
		else
		{
			dlg( EnableControls,0,~<OpacitySliderControlName>~,~<OpacityEditControlName>~);
			dlg( EnableControls,0,~<OpacityEditControlName>~,~<OpacityEditControlName>~);
		}
		
		if (SimilarStr(~<currentValue>~,None))
		{
			currentValue = ~~;
		}
		result = currentNode(SetValue,~<Keyword>~,~<CurrentValue>~);
		currentNode(SetStatus,~<Keyword>~,12);
	}
}


VOID OnSpotColorComboBoxPressed(DialogName,ControlName,Keyword1,Keyword2,TextureComboBox,OpacityEditText,OpacitySlider)
{
	if (!GenDlg( dlg,Is,~<DialogName>~ ) )	
	{  
		return;
	}	
	
	dlg(GetControlValue,~<ControlName>~,Value);
	
	if ( dlg( GetDataGenCon, currentNode))
	{
		if (SimilarStr(~<Value>~,~None~))
		{
			currentNode(SetValue,~<Keyword1>~,0);
			currentNode(SetValue,~<Keyword2>~,0);
		}
		else if (SimilarStr(~<Value>~,~Spot Color~))
		{
			currentNode(SetValue,~<Keyword2>~,0);
			currentNode(SetValue,~<Keyword1>~,1);
		}
		else if (SimilarStr(~<Value>~,~Spot Texture~))
		{
			currentNode(SetValue,~<Keyword1>~,0);
			currentNode(SetValue,~<Keyword2>~,1);
		}
		EnableSpotColorControls(dlg,~<Value>~, ~<TextureComboBox>~,~<OpacityEditText>~,~<OpacitySlider>~);

	}
}


VOID EnableSpotColorControls(&dlg,SpotColorType,TextureComboBox,OpacityEditText,OpacitySlider)
{
	if (SimilarStr(~<SpotColorType>~,~None~))
	{
		dlg(EnableControls,0,~<TextureComboBox>~,~<OpacitySlider>~,~<OpacityEditText>~);
	}
	else if (SimilarStr(~<SpotColorType>~,~Spot Color~))
	{
		dlg(EnableControls,0,~<TextureComboBox>~);
		dlg(EnableControls,1,~<OpacitySlider>~,~<OpacityEditText>~);
	}
	else if (SimilarStr(~<SpotColorType>~,~Spot Texture~))
	{
		dlg(EnableControls,1,~<TextureComboBox>~);
		dlg(EnableControls,0,~<OpacitySlider>~,~<OpacityEditText>~);
	}

}

VOID ShowControl(&dlg,ControlName,Show)
{
	dlg(~<ControlName>~,<show>);
}

VOID OnHeadAlignCropMethod(DialogName)
{
	if (!GenDlg( dlg,Is,~<DialogName>~ ) )	
	{  
		return;
	}	
	Keyword = ~HeadAlignmentCropMethod:~;
	dlg(GetControlValue,HeadAlignCropMethod,currentValue);
	isImageNode = 0;
	if ( dlg( GetDataGenCon, currentNode))
	{
		result = currentNode(SetValue,~<Keyword>~,~<CurrentValue>~);
		result = currentNode(SetStatus,~<Keyword>~,12);
		currentNode(IsImageNode,IsImageNode);
	}
	if (Numeric(~<currentValue>~) == 0)
	{
		dlg(EnableControls,<isImageNode>,HeadAlignChinYEditText,HeadAlignChinYSlider,HeadAlignChinStatic);
		dlg(EnableControls,0,HeadAlignTopOfHeadEditText,HeadAlignTopOfHeadSlider,HeadAlignTopOfHeadStatic);
	}
	else
	{
		dlg(EnableControls,0,HeadAlignChinYEditText,HeadAlignChinYSlider,HeadAlignChinStatic );
		dlg(EnableControls,<isImageNode>,HeadAlignTopOfHeadEditText,HeadAlignTopOfHeadSlider,HeadAlignTopOfHeadStatic);
	} 
}
VOID OnInitHeadAlignTopOfHeadSlider(DialogName)
{
	if (!GenDlg( dlg,Is,~<DialogName>~ ) )	
	{  
		return;
	}	
	Keyword = ~HeadAlignmentCropMethod:~;
	isImageNode = 0;
	if ( dlg( GetDataGenCon, currentNode))
	{
		result = currentNode(GetValue,~<Keyword>~,CurrentValue);
		currentNode(IsImageNode,IsImageNode);
		isImageNode = Numeric(~<isImageNode>~);
	}
	if (Numeric(~<currentValue>~) == 0 || <isImageNode> == 0)
	{
		dlg(EnableControls,0,HeadAlignTopOfHeadSlider);
	}
	else
	{
		dlg(EnableControls,1,HeadAlignTopOfHeadSlider);
	} 
}

VOID OnInitHeadAlignTopOfHeadEditText(DialogName)
{
	if (!GenDlg( dlg,Is,~<DialogName>~ ) )	
	{  
		return;
	}	
	Keyword = ~HeadAlignmentCropMethod:~;
	isImageNode = 0;
	if ( dlg( GetDataGenCon, currentNode))
	{
		result = currentNode(GetValue,~<Keyword>~,CurrentValue);
		currentNode(IsImageNode,IsImageNode);
		isImageNode = Numeric(~<isImageNode>~);
	}
	if (Numeric(~<currentValue>~) == 0 || <isImageNode> == 0)
	{
		dlg(EnableControls,0,HeadAlignTopOfHeadEditText);
	}
	else
	{
		dlg(EnableControls,1,HeadAlignTopOfHeadEditText);
	} 
}

VOID OnInitHeadAlignChinYEditText(DialogName)
{
	if (!GenDlg( dlg,Is,~<DialogName>~ ) )	
	{  
		return;
	}	
	Keyword = ~HeadAlignmentCropMethod:~;
	isImageNode = 0;
	if ( dlg( GetDataGenCon, currentNode))
	{
		result = currentNode(GetValue,~<Keyword>~,CurrentValue);
		currentNode(IsImageNode,IsImageNode);
		isImageNode = Numeric(~<isImageNode>~);
	}
	if (Numeric(~<currentValue>~) == 0  && <isImageNode> != 0)
	{
		dlg(EnableControls,1,HeadAlignChinYEditText);
	}
	else
	{
		dlg(EnableControls,0,HeadAlignChinYEditText );
	} 
}

VOID OnInitHeadAlignChinYSlider(DialogName)
{
	if (!GenDlg( dlg,Is,~<DialogName>~ ) )	
	{  
		return;
	}	
	Keyword = ~HeadAlignmentCropMethod:~;
	isImageNode = 0;
	if ( dlg( GetDataGenCon, currentNode))
	{
		result = currentNode(GetValue,~<Keyword>~,CurrentValue);
		currentNode(IsImageNode,IsImageNode);
		isImageNode = Numeric(~<isImageNode>~);
	}
	if (Numeric(~<currentValue>~) == 0 && <isImageNode> != 0)
	{
		dlg(EnableControls,1,HeadAlignChinYSlider);
	}
	else
	{
		dlg(EnableControls,0,HeadAlignChinYSlider );
	} 
}


