Include: ~Classes\BaseGrid~;

VOID DSbaBatchSetupsGrid::DSbaBatchSetupsGrid()					// CONSTRUCTOR
{
	TableName = ~DSbaBatchSetups~;
	DocumentQuery = ~Select * from <TableName> Order By Setup~;
	Title = ~Auto Balance Batch Setups~;
	WindowTop   = 50;
	WindowLeft  = 40;
	WindowWidth = 50; 
	WindowHeight = 30;
	HelpPage = ~DSbaBatchSetup.htm~;
}

STR DSbaBatchSetupsGrid::GetKey( &Item )					// PRIMARY KEY FOR THE TABLE
{
	return ~Setup = '<$con.Item[Setup]>'~;
}


NUMERIC DSbaBatchSetupsGrid::SaveAllChanges()
{
	if (BaseGrid::SaveAllChanges())
	{
		RefreshListView();
	}

	return TRUE;
}

NUMERIC DSbaBatchSetupsGrid::ProcessTextDrop( &Item )
{
	// <$con.Item[ID]>
	return TRUE;
}


NUMERIC DSbaBatchSetupsGrid::OnDoubleClick()
{
	if ( !DataView( GetSelected,SelectedItems ) )	{ return Warning( ~There were no selected items~ ); }

	while ( SelectedItems( GetNext,Item ) )
	{
		Open( Any,~<$con.Item[Setup]>~ );
	}

	return TRUE;
}


NUMERIC Init()
{
	if (Defined(Grid))
	{
		Grid.ReOpen();
		return TRUE;
	}

	Class( DSbaBatchSetupsGrid,Extends,BaseGrid );

	DSbaBatchSetupsGrid( New, Grid );

	Grid.DefineWindow();
	Grid.Init();

	return Global( Grid );
}


NUMERIC DSbaBatchSetupsGrid::DefineStdGridButtons( Subject )
{
	xPosition = $hGap;

	if ( MethodDefined( DeleteRecord ) )
	{
		Define: DeleteButton Using DDWinCtrlDef AsSymbol DeleteButton
			Fields:	GENCONNAME		This
					DACTIONSTEXT	ACTION EXEC ( <THIS>.DeleteRecord(TRUE) )
					POSITION		$xPosition, $vGap $StdButtonWidth $ButtonHeight
					TEXT			Translate( ~&Delete~ )
					TOOLTIP			Translate( ~Delete the selected <Subject>s~ )
					TYPENAME		BUTTON ;

		xPosition += $StdButtonWidth + $hGap;
	}

	if ( MethodDefined( RefreshListView ) )
	{
		Define: RefreshButton Using DDWinCtrlDef AsSymbol RefreshButton
			Fields:	GENCONNAME		This
					DACTIONSTEXT	ACTION EXEC ( <THIS>.RefreshListView() )
					POSITION		$xPosition, $vGap $StdButtonWidth $ButtonHeight
					TEXT			Translate( ~&Refresh~ )
					TOOLTIP			Translate( ~Refresh the list of <Subject>s~ )
					TYPENAME		BUTTON ;

			xPosition += $StdButtonWidth + $hGap;
	}

	return $xPosition;
}


VOID DSbaBatchSetupsGrid::AddStdMenuItems()
{
	AddMenuItem( TRUE,	FALSE,Translate(UIMenuText,MenuDelete),ACTION EXEC ( <THIS>.DeleteRecord() ) );
	AddMenuItem( TRUE,	FALSE,Translate(UIMenuText,MenuRefresh),ACTION EXEC ( <THIS>.RefreshListView() ) );
}
