IncludeClass( BaseGrid);

VOID BooksGrid::BooksGrid()					// CONSTRUCTOR
{
	TableName = ~Books~;
	DocumentQuery = ~Select * from <TableName> Order By OrderID,GroupID~;
	Title = ~Books~;
	WindowHeight = 30;
	WindowWidth = 60;
	HelpFile = ~AdminHelpFile~;
	HelpPage = ~OrderItems.htm~;
}

STR BooksGrid::GetKey( &Item )			{ return ~GroupID = <$con.Item[GroupID]> And OrderID =  '<$con.Item[OrderID]>'~; }  // PRIMARY KEY FOR THE TABLE

VOID BooksGrid::OnAddRecord( &NewRow )	{ NewRow( SetValues,GroupID,0,TemplateName,~~,Quantity,1 ); }

NUMERIC BooksGrid::OnDoubleClick()		
{  
	if ( !DataView( GetSelected,SelectedItems ) )
		{ return Warning( TR( BaseGridTrans, NoSelectedItems ) ); }

	SelectedItemCount = SelectedItems( ChildCount );

	if (SelectedItems(GetNext,Item))
	{
		Item(GetValue,GroupID,GroupID);
		GroupID = Numeric(~<GroupID>~);
		Item(GetValue,OrderID,OrderID);

		Query = ~Select * From BookAttributes Where OrderID = '<OrderID>' And GroupID = <GroupID> Order By Sequence~;
		action = ACTION DOC ( EditBookAttributes Open EditBookAttributes "Init(~Book Attributes for Order '<OrderID>' and GroupID '<GroupID>'~,~<Query>~);" );
		PerformActions( action );
	}
	return TRUE;
}	

NUMERIC BooksGrid::ChangeRecordAudits( &Changed )		// CALLED BEFORE ADDING OR CHANGING A RECORD
{
	
	if ( IsNULL(~<$Con.Changed[GroupID]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  GroupID cannot be blank.~ ) ); }

	if ( IsNULL(~<$Con.Changed[OrderID]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  OrderID cannot be blank.~ ) ); }

	if ( IsNULL(~<$Con.Changed[Quantity]>~) )
		{ return Warning( Translate( ~Unable to save pending changes.  Quantity cannot be blank.~ ) ); }

	return TRUE;
}

VOID BooksGrid::SetParams(TheTitle,Query)
{
	DocumentQuery = ~<Query>~;
	Title = ~<TheTitle>~;
	SetTitle(~<TheTitle>~);
}

NUMERIC Init(ThisTitle,Query)
{
	if (Defined(Grid))
	{
		Grid.SetParams(~<ThisTitle>~,~<Query>~);
		Grid.RefreshListView();
		return TRUE;
	}

	Class( BooksGrid,Extends,BaseGrid );

	BooksGrid( New,Grid );
	Grid.DefineWindow();
	Grid.SetParams(~<ThisTitle>~,~<Query>~);
	Grid.Init();

	return Global( Grid );
}
