
//	THIS FILE CONTAINS ROUTINES USED WHEN DEBUGGING

//	DisplayGCData( char *aPGC ) ;				*	DISPLAY DATA FROM A GENCON
//	DisplayTable( char *PGCList ) ;				*	DISPLAY DATA FROM A GENCON LIST
//	GetAttrValueString( char *aPGC, char *AttrName, char *Value ) ;
//	PrintRect( char *name, double *rect ) ;		*	PRINT A RECT
//	PrintString( char *format, char *string ) ;	*	PRINT A STRING
//	PrintDouble( char *format, double dVal ) ;	*	PRINT A DOUBLE
//	PrintLong( char *format, long lVal ) ;		*	PRINT A LONG
//	PrintInt( char *format, int iVal ) ;		*	PRINT AN INTEGER
//	PrintChar( char *format, char iVal ) ;		*	PRINT A CHARACTER

int gDebug	= 1 ;	//	THIS WILL ENABLE THE "PRINT" ROUTINES !


//	THIS ROUTINE WILL DISPLAY DATA FROM A GENCON LIST
//	OR A PGCList (DATABASE).
DisplayTable( char *PGCList )
{
	char *aPGC ;
	aPGC = GetFirst( PGCList ) ;
	while( aPGC )
	{
		DisplayGCData( aPGC ) ;
		aPGC = GetNext( PGCList ) ;
	}
}


DisplayGCData( char *aPGC )
{
	TCHAR	 Value[1024] ;
	char	*theDict ;
	char	*anIter ;
	char	*anAttr ;

	theDict = GetDataDict( aPGC ) ;
	anIter  = CreateIterator( theDict ) ;
	anAttr  = GetFirst( anIter ) ;

	while( anAttr )
	{
		if( AttrChanged( aPGC, GetAttrName( anAttr )))
		{
			GetAttrValueString( aPGC, GetAttrName( anAttr ), Value ) ;
			printf( "%s", Value ) ;
		}
		anAttr = GetNext( anIter ) ;
	}
	printf( "%s", " " ) ;
	anIter = Delete( anIter ) ;
}

GetAttrValueString( char *aPGC, TCHAR *AttrName, TCHAR *Value )
{
	TCHAR	Temp[1024] ;
	GetAttrValue( aPGC, AttrName, Temp ) ;
	sprintf( Value, "%-32.32s = ", AttrName ) ;
	strcat( Value, Temp ) ;
	return( Value ) ;
}



PrintRect( TCHAR *name, double *rect )
{
	TCHAR	word[128] ;
	TCHAR	word2[128] ;
	
	if( gDebug )
	{
		strcpy( word, name ) ;
		strcat( word, ": [" ) ;
		sprintf( word2, "%lf ", rect[0] ) ;
		strcat( word, word2 ) ;
		sprintf( word2, "%lf ", rect[1] ) ;
		strcat( word, word2 ) ;
		sprintf( word2, "%lf ", rect[2] ) ;
		strcat( word, word2 ) ;
		sprintf( word2, "%lf]", rect[3] ) ;
		strcat( word, word2 ) ;
		printf( "%s", word ) ;
	}
}

PrintString( TCHAR *format, TCHAR *string )
{
	if( gDebug )
	{
		printf( format, string ) ;
	}
}

PrintDouble( TCHAR *format, double dVal )
{
	if( gDebug )
	{
		printf( format, dVal ) ;
	}
}

PrintLong( TCHAR *format, long lVal )
{
	if( gDebug )
	{
		printf( format, lVal ) ;
	}
}

PrintInt( TCHAR *format, int iVal )
{
	if( gDebug )
	{
		printf( format, iVal ) ;
	}
}

PrintChar( TCHAR *format, char iVal )
{
	if( gDebug )
	{
		printf( format, iVal ) ;
	}
}

