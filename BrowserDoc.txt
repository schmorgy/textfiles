IncludeClass(BaseClass);
IncludeClass(BaseHTML);

Class( Web,Extends,BaseHTML );


VOID Web::Web()
{
	HelpPage = ~Reports.htm~;
}

VOID	Web::DocAction( actions )
{
	Action = STR ( <actions> );
	PerformDocActions( Action );
}


FirstTime = TRUE;


VOID InitStatic(URL,WindowTitle,Left,Top,Width,Height)
{
	Init( ~<URL>~,~<WindowTitle>~,~<Left>~,~<Top>~,~<Width>~,~<Height>~,FALSE,FALSE,FALSE,TRUE,TRUE,TRUE,TRUE );
}

VOID Init( URL,WindowTitle,Left,Top,Width,Height,StatusBar,GotoURL,NavControls,NoBorder,NoCaption,NoSizing,NoWindowPositionAdjust,PositionIsPixels )
{
	if ( !<FirstTime> )
	{
		ReOpen();
		return;
	}

	FirstTime = FALSE;

	Web( New,Page );

	if ( DefinedAndNotNull(Left) )						{ Page.Set(WindowLeft,~<Left>~); }
	if ( DefinedAndNotNull(Top) )						{ Page.Set(WindowTop,~<Top>~); }
	if ( DefinedAndNotNull(Width) )						{ Page.Set(WindowWidth,~<Width>~); }
	if ( DefinedAndNotNull(Height) )					{ Page.Set(WindowHeight,~<Height>~); }
	
	if ( DefinedAndNotNull(PositionIsPixels) )			{ Page.Set(IsPositionPercent,!Numeric(~<PositionIsPixels>~)); }

	if ( DefinedAndNotNull(StatusBar) )					{ Page.Set(WantStatusBar,~<StatusBar>~); }
	if ( DefinedAndNotNull(GotoURL) )					{ Page.Set(WantGotoURL,~<GotoURL>~); }
	if ( DefinedAndNotNull(NavControls) )				{ Page.Set(WantNavControls,~<NavControls>~); }
	if ( DefinedAndNotNull(NoBorder) )					{ Page.Set(fNoBorder,~<NoBorder>~); }	
	if ( DefinedAndNotNull(NoCaption) )					{ Page.Set(fNoCaption,~<NoCaption>~); }
	if ( DefinedAndNotNull(NoSizing) )					{ Page.Set(fNoSizing,~<NoSizing>~); }
	if ( DefinedAndNotNull(NoWindowPositionAdjust) )	{ Page.Set(fNoWindowPositionAdjust,~<NoWindowPositionAdjust>~); }
	

	Global( Page );

	Page.DefineWindow();

	Page.Init();

	if ( DefinedAndNotNull(WindowTitle) )	{ Page.SetWindowTitle(~<WindowTitle>~); }

	if ( !IsNULL( ~<URL>~ ) )
	{
		StartsWithForwardSlashes = !IsNull( String( BeginsWith,~//~,~<URL>~) );
		StartsWithBackSlashes = !IsNull( String( BeginsWith,~\\~,~<URL>~) );

		substr( ~<URL>~,1,1,SecondLetter );
		IsLocalFile = ~<SecondLetter>~ == ~:~;

		IsHTTP = !IsNull( String( BeginsWith,~http:~,~<URL>~) );
		IsFile = !IsNull( String( BeginsWith,~file:~,~<URL>~) );

		if ( <StartsWithBackSlashes> || <IsLocalFile> )
		{
			Page.Open( ~<URL>~ );
			return;
		}

		if ( !(<StartsWithForwardSlashes> || <isHTTP>) )
		{
			URL = ~<$App.HTTPServer>/<URL>~ ;
		}

		Page.Open( ~<URL>~ );
	}
	else
	{
		Page.Home();
	}
}

VOID InitIE( URL,WindowTitle,Left,Top,Width,Height )
{
	Automation( IE,CLSIDFromProgID,~InternetExplorer.Application~,CreateInstance  );

	if ( DefinedAndNotNull(Left) )			{ IE( Put,Left,I4,~<Left>~); }
	if ( DefinedAndNotNull(Top) )			{ IE( Put,Top,I4,~<Top>~); }
	if ( DefinedAndNotNull(Width) )			{ IE( Put,Width,I4,~<Width>~); }
	if ( DefinedAndNotNull(Height) )		{ IE( Put,Height,I4,~<Height>~); }

	IE( Put,Visible,I4,TRUE );

	if ( !IsNULL( ~<URL>~ ) )
	{
		StartsWithForwardSlashes = !IsNull( String( BeginsWith,~//~,~<URL>~) );
		StartsWithBackSlashes = !IsNull( String( BeginsWith,~\\~,~<URL>~) );

		IsHTTP = !IsNull( String( BeginsWith,~http:~,~<URL>~) );
		IsFile = !IsNull( String( BeginsWith,~file:~,~<URL>~) );

		if ( !(<StartsWithForwardSlashes> || <StartsWithBackSlashes> || <isHTTP> || <isFILE>) )
		{
			URL = ~<$App.HTTPServer>/<URL>~ ;
		}

		IE( Method,Navigate2,BSTR,~<URL>~ );
	}

	Exit();
}

