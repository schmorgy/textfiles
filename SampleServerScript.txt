IncludeClass(BaseHTML);

Class( Sample,Extends,BaseHTML,
		Member,fMsg,Str,~Initial Value~,
		Member,fValue,Numeric,10,
		Member,fTitle,Str,~~,
		Member,fURL,Str,~~ );

VOID Sample::Sample( theURL )
{
	WindowHeight = 100;
	WindowLeft = 20;
	
	Static(Authorized(DP1));

	fURL = DefinedAndNotNull( theURL ) ? ~<theURL>~ : ~<$App.HTTPServer>/EmptyPage.kpl~;
}

VOID Sample::ViewDefinition()		
{
	Fields:	HTMLCloseBox	<fStatic>
			HTMLBackButton	<fStatic>;		
}

VOID Sample::DefineMessages()
{
	BaseHtml::DefineMessages();
}

NUMERIC Sample::UpdateWindow()
{
	Open( ~<fURL>~ );
	SetWindowTitle( IsNull(~<fTitle>~) ? ~<fURL>~ : ~<fTitle>~ );
	return TRUE;
}


NUMERIC Sample::DisplayWindow()				// Open a new window to show the UI
{
	ReturnOnSuccess( Defined( Window ) );

	DefineWindow();
	Init();
	UpdateWindow();

	return TRUE;
}


VOID	Sample::AddTranslationInfo( msg )
{
	warning( ~<msg>~ );
}


VOID DisplayGettingStarted( value )
{
	value = !<value>;
	SetUserSettings( Startup,DisplayGettingStarted,~<value>~,TRUE );
}


NUMERIC DefineThisObject( theURL )			// Entry point to utilize this object from an existing window
{
	ReturnOnSuccess( Defined( Obj ) );

	Sample( New,Obj,~<theURL>~ );
	return Global( Obj );
}


NUMERIC InitThisObject( theURL,theTitle )	// Entry point to open in a new window
{	
	if ( ObjectAlreadyExists( Obj ) )
	{
		Obj.Set( fURL,~<theURL>~ );
		Obj.Set( fTitle,~<theTitle>~ );
		return Obj.UpdateWindow();
	}

	DefineThisObject( ~<theURL>~ );
	Obj.Set( fTitle,~<theTitle>~ );
	return Obj.DisplayWindow();	
}


