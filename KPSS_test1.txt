

VOID DefineSizzleToolBar()
{
	Separator = 1;

	Tree( Name,~LRToolbar~,Location,~[UI Toolbars]~,PluckAndFree );

	Define: LRToolbar using DDToolbarDef
		Fields:	ToolBarType			Standard
				Position			50 50 0 0
				Text				~Kodak Professional Scanner SW -- Sizzle~			
				Rows				2		
				IsInitiallyDocked	~F~
				AllowDocking		~T~

				Contains: INLISTORDER
				{
					If 0
					{
					//Define: LRToolbarDataBase using DDToolbarButtonDef
					//	Fields: 
								//ToolBarBitmapFilename ~ToolbarButtons\undo.TIF~
							//	Text				~DataBase~												
							//	ActionsText			ACTION EXEC ( MessageBox(~Database is not implemented yet~); )
							//	Tooltip				~DataBase Stuff~
							//	IDText				ID
							//	IsEnabled			T
							//	IsPressed			F
							//	IsHidden			F
							//	IsIndeterminate		F
							//	IsChecked			F ;

					//Define: Separator<Separator++> using DDToolbarButtonDef  Fields: IsSeparator T
			
					//Define: LRToolbarNew using DDToolbarButtonDef
					//	Fields: //ToolBarBitmapFilename ~ToolbarButtons\redo.TIF~
							//	Text					~Thumbnails~
							//	ActionsText				ACTION EXEC ( MessageBox(~Thumbnails is not implemented yet~); )
							//	Tooltip					~Open Tumbnail Window~
							//	IDText					ID
							//	IsEnabled				T
							//	IsPressed				F
							//	IsHidden				F
							//	IsIndeterminate			F
							//	IsChecked				F ;
						
				
					//Define: Separator<Separator++> using DDToolbarButtonDef  Fields: IsSeparator T
					//Define: Separator<Separator++> using DDToolbarButtonDef  Fields: IsSeparator T
					}

					Define: LRToolbarDelete using DDToolbarButtonDef
					Fields: 
							//ToolBarBitmapFilename ~ToolbarButtons\imgtilt.TIF~
							Text					~AUTO~
							ActionsText				ACTION EXEC ( MessageBox(~AUTO is not implemented yet~); )
							Tooltip					~Auto scan all images in the roll~
							IDText					ID
							IsEnabled				T
							IsPressed				F
							IsHidden				F
							IsIndeterminate			F
							IsChecked				F;

					Define: LRToolbarProperties using DDToolbarButtonDef
						Fields: //ToolBarBitmapFilename ~ToolbarButtons\clrselec.TIF~
								Text					~SCAN 1~
								ActionsText				ACTION  DOC ( Scan1 Open "<$App.Directory>\DynamicJobs\TestTwizzle.txt")
								//ActionsText			ACTION EXEC ( MessageBox(~SCAN 1 is not implemented yet~); )
								//ActionsText				ACTION RunKPL ( "<$App.Directory>\DynamicJobs\TestTwizzle.txt" )
								Tooltip					~Scan 1 Frame~
								IDText					ID
								IsEnabled				T
								IsPressed				F
								IsHidden				F
								IsIndeterminate			F
								IsChecked				F;
								

					Define: Separator<Separator++> using DDToolbarButtonDef  Fields: IsSeparator T
					Define: Separator<Separator++> using DDToolbarButtonDef  Fields: IsSeparator T
					Define: Separator<Separator++> using DDToolbarButtonDef  Fields: IsSeparator T
					Define: Separator<Separator++> using DDToolbarButtonDef  Fields: IsSeparator T

					Define: LRToolbarRefresh using DDToolbarButtonDef
					Fields: 
							//ToolBarBitmapFilename ~ToolbarButtons\bricont.TIF~
							Text					~STOP~
							ActionsText				ACTION EXEC ( MessageBox(~Transport is not implemented yet~); )
							Tooltip					~Stop Auto Scan~
							IDText					ID
							IsEnabled				T
							IsPressed				F
							IsHidden				F
							IsIndeterminate			F
							IsChecked				F;

					//Define: Separator<Separator++> using DDToolbarButtonDef  Fields: IsSeparator T
				If 0
				{
				//	Define: LRToolbarViewImages using DDToolbarButtonDef
				//	Fields: 
							//ToolBarBitmapFilename ~ToolbarButtons\saturat.TIF~
						//	Text					~Crop~	
						//	ActionsText				ACTION EXEC ( MessageBox(~Crop is not implemented yet~); )
						//	Tooltip					~Crop~
						//	IDText					ID
						//	IsEnabled				T
						//	IsPressed				F
						//	IsHidden				F
						//	IsIndeterminate			F
						//	IsChecked				F
				}
							
					Define: Separator<Separator++> using DDToolbarButtonDef  Fields: IsSeparator T

					Define: LRToolbarViewLineItems1 using DDToolbarButtonDef
						Fields: 
							//ToolBarBitmapFilename ~ToolbarButtons\colorbal.TIF~
							Text					~Setup~													
							ActionsText				~[OpenDocFile("<$App.Directory>\KPSS\TabsTest.txt")]~
							Tooltip					~Color Ball~
							IDText					ID
							IsEnabled				T
							IsPressed				F
							IsHidden				F
							IsIndeterminate			F
							IsChecked				F
							
					//Define: Separator<Separator++> using DDToolbarButtonDef  Fields: IsSeparator T
					If 0
					{
					//Define: LRToolbarViewLineItems2 using DDToolbarButtonDef
					//	Fields: 
							//ToolBarBitmapFilename ~ToolbarButtons\colorbal.TIF~
						//	Text					~Histogram~
						//	ActionsText				ACTION EXEC ( MessageBox(~Histogram is not implemented yet~); )
						//	Tooltip					~Histogram~
						//	IDText					ID
						//	IsEnabled				T
						//	IsPressed				F
						//	IsHidden				F
						//	IsIndeterminate			F
						//	IsChecked				F
					}		
					Define: Separator<Separator++> using DDToolbarButtonDef  Fields: IsSeparator T
				}

	Hang:	LRToolbar ~[UI Toolbars]~;
}



DefineSizzleToolBar();
HandleActions( ~CreateToolbar(LRToolbar)~ );
