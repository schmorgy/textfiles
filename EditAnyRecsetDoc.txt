




NUMERIC AllOptions()
{
	return DataView( DisplayMenu,ListViewMenu,0,0  );
}

NUMERIC ProcessSubjectInfo()
{
	Action = ACTION DOC ( ProcessSubjectInfo OpenOnce ProcessSubjectInfo "Init();" );
	return PerformActions( Action );

	//Open( Any,~ProcessSubjectInfo.txt~ );
}


Include: ~EditAnyRecordsetRoutines~;


Define:	ListViewMenu Using DDMenuDef AsSymbol ListViewMenu
	Fields:		Position	(-1)		
	Contains:	INLISTORDER
	{
		Define:	AddRecord	using	DDMenuItemDef
			Fields:	Text		Translate( ~&New~ )
					IDText		~ID~
					ActionsText  ACTION Exec ( AddRecord(); )

		Define:	NULL1 using DDMenuItemDef
			Fields:	Text		~~
					IDText		~NULL~

		Define:	SaveAllChanges	using	DDMenuItemDef
			Fields:	Text		Translate( ~&Save Changes~ )
					IDText		~ID~
					ActionsText  ACTION Exec ( SaveAllChanges() )

		Define:	ForgetAllChanges	using	DDMenuItemDef
			Fields:	Text		Translate( ~Cancel Changes~ )
					IDText		~ID~
					ActionsText  ACTION Exec ( RollBackAllChanges() )

		Define:	DeleteRecord	using	DDMenuItemDef
			Fields:	Text		Translate( ~&Delete~ )
					IDText		~ID~
					ActionsText  ACTION Exec ( DeleteRecord(); )

		Define:	Refresh	using	DDMenuItemDef
			Fields:	Text		Translate( ~&Refresh (F5)~ )
					IDText		~ID~
					ActionsText  ACTION Exec ( RefreshListView(); )

		Define:	SaveAs	using	DDMenuItemDef
			Fields:	Text		Translate( ~&SaveAs~ )
					IDText		~ID~
					ActionsText  ACTION Exec ( SaveAsRecordSet(); )

		Define:	NULL2 using DDMenuItemDef
			Fields:	Text		~~
					IDText		~NULL~

		Define:	AddFieldNames	using	DDMenuItemDef
			Fields:	Text		Translate( ~Add Field Names To the Macro Assistant~ )
					IDText		~ID~
					ActionsText  ACTION Exec ( AddToMacrosTable(); )

					

		IF 0 
		{
			Define:	CopyRecord	using	DDMenuItemDef
				Fields:	Text		Translate( ~&Copy~ )
						IDText		~ID~
						ActionsText  ACTION Exec ( CopyRecord(); )
		}
	}



Include: ~DefineStdGridButtons~;


ButtonWidth = 70;  ButtonHeight = 20;  hGap = 1; vGap = 2;

Define: DataWindow Using DDWinDef
	Fields:		Position				0 50 100 45
				IsPositionPercent		T
				EnableStatusBar			T
				TypeName				SplitterWnd
				SplitterRows			~2 1 90~
				SplitterColumns			1

	Contains:	INLISTORDER
	{
		Define: ControlView Using DDViewDef AsSymbol ControlView
			Fields:			ViewType				FormView
							KeyboardActionsText		ACTION Exec ( OnKeydown() ) 
							HActionsText			ACTION SHOWHELPPAGE ( KPISHelpFile "EditAnyRecordset.htm" )
			Contains:
			{
				Xposition = DefineStdGridButtons(Record) + 10;

				SmallButtonWidth = 70;

				Define: CreateTableButton Using DDWinCtrlDef AsSymbol CreateTableButton
					Fields:	GENCONNAME		This
							DACTIONSTEXT	ACTION EXEC ( CreateDatabaseTable(~SubjectInfo~,~OrderID,SubjectID~) )
							POSITION		$Xposition + $hGap, $vGap $SmallButtonWidth $ButtonHeight
							TEXT			Translate( ~Create Table~ )
							TOOLTIP			Translate( ~Create a table in the DP2 database using this data~ )
							TYPENAME		BUTTON
			}

		Define: DataView Using DDViewDef AsSymbol DataView
			Fields:	ViewType				~ListView~
					UndefinedFieldsEditable	TRUE
					ChangeRecordActionsText ACTION Exec ( ChangeRecord(); )
					DeleteRecordActionsText ACTION Exec ( DeleteRecord(); )
					RClickUpActionsText		ACTION Exec ( RightClickInListView(); )
					RefreshActionsText		ACTION Exec ( RefreshListView() )
					KeyboardActionsText		ACTION Exec ( OnKeydown() ) 
					HActionsText			ACTION SHOWHELPPAGE ( KPISHelpFile "EditAnyRecordset.htm" )
					CloseActionsText		ACTION Call ( OnCloseDataView() ) 
					ViewDataType			Text;
	}
	

IF 0
{

	Data Source OLE DB			Connection String 
	Microsoft® Access			Provider=Microsoft.Jet.OLEDB.4.0;Data Source=physical path to .mdb file 
	Microsoft SQL Server		Provider=SQLOLEDB.1;Data Source=path to database on server 
	Oracle						Provider=MSDAORA.1;Data Source=path to database on server 
	Microsoft Indexing Service	Provider=MSIDXS.1;Data Source=path to file 

	To provide for backward compatibility, the OLE DB Provider for ODBC supports ODBC connection string syntax. The following table lists commonly used ODBC connection strings: 

	Data Source Driver			ODBC Connection String 
	Microsoft Access			Driver={Microsoft Access Driver (*.mdb)};DBQ=physical path to .mdb file 
	SQL Server					DRIVER={SQL Server};SERVER=path to server 
	Oracle						DRIVER={Microsoft ODBC for Oracle};SERVER=path to server 
	Microsoft Excel				Driver={Microsoft Excel Driver (*.xls)};DBQ=physical path to .xls file; DriverID=278 
	Microsoft Excel 97			Driver={Microsoft Excel Driver (*.xls)};DBQ=physical path to .xls file;DriverID=790 
	Paradox						Driver={Microsoft Paradox Driver (*.db)};DBQ=physical path to .db file;DriverID=26 
	Text						Driver={Microsoft Text Driver (*.txt;*.csv)};DefaultDir=physical path to .txt file 
	Microsoft Visual FoxPro® (with a database container)  Driver={Microsoft Visual FoxPro Driver};SourceType=DBC;SourceDb=physical path to .dbc file 
	Microsoft Visual FoxPro (without a database container)  Driver={Microsoft Visual FoxPro Driver};SourceType=DBF;SourceDb=physical path to .dbf file 
}
